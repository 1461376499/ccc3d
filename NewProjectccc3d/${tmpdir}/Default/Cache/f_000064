(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "./define.js"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("./define.js"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.define);
    global.bindingLayout = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _define) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.GFXBindingLayout = _exports.GFXBindingUnit = void 0;

  function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

  function _createForOfIteratorHelper(o) { if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  var GFXBindingUnit = function GFXBindingUnit() {
    _classCallCheck(this, GFXBindingUnit);

    this.binding = 0;
    this.type = _define.GFXBindingType.UNKNOWN;
    this.name = '';
    this.buffer = null;
    this.texView = null;
    this.sampler = null;
  };
  /**
   * @en GFX binding layout.
   * @zh GFX 绑定布局。
   */


  _exports.GFXBindingUnit = GFXBindingUnit;

  var GFXBindingLayout = /*#__PURE__*/function (_GFXObject) {
    _inherits(GFXBindingLayout, _GFXObject);

    function GFXBindingLayout(device) {
      var _this;

      _classCallCheck(this, GFXBindingLayout);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(GFXBindingLayout).call(this, _define.GFXObjectType.BINDING_LAYOUT));
      _this._device = void 0;
      _this._bindingUnits = [];
      _this._isDirty = false;
      _this._device = device;
      return _this;
    }

    _createClass(GFXBindingLayout, [{
      key: "bindBuffer",

      /**
       * @en Bind buffer to the specified binding unit.
       * @zh 在指定的 binding 位置上绑定缓冲。
       * @param binding The target binding.
       * @param buffer The buffer to be bound.
       */
      value: function bindBuffer(binding, buffer) {
        var _iterator = _createForOfIteratorHelper(this._bindingUnits),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var bindingUnit = _step.value;

            if (bindingUnit.binding === binding) {
              if (bindingUnit.type === _define.GFXBindingType.UNIFORM_BUFFER) {
                if (bindingUnit.buffer !== buffer) {
                  bindingUnit.buffer = buffer;
                  this._isDirty = true;
                }
              } else {
                console.error('Setting binding is not GFXBindingType.UNIFORM_BUFFER.');
              }

              return;
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
      /**
       * @en Bind sampler to the specified binding unit.
       * @zh 在指定的 binding 位置上绑定采样器。
       * @param binding The target binding.
       * @param sampler The sampler to be bound.
       */

    }, {
      key: "bindSampler",
      value: function bindSampler(binding, sampler) {
        var _iterator2 = _createForOfIteratorHelper(this._bindingUnits),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var bindingUnit = _step2.value;

            if (bindingUnit.binding === binding) {
              if (bindingUnit.type === _define.GFXBindingType.SAMPLER) {
                if (bindingUnit.sampler !== sampler) {
                  bindingUnit.sampler = sampler;
                  this._isDirty = true;
                }
              } else {
                console.error('Setting binding is not GFXBindingType.SAMPLER.');
              }

              return;
            }
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
      /**
       * @en Bind texture view to the specified binding unit.
       * @zh 在指定的 binding 位置上绑定纹理视图。
       * @param binding The target binding.
       * @param texView The texture view to be bound.
       */

    }, {
      key: "bindTextureView",
      value: function bindTextureView(binding, texView) {
        var _iterator3 = _createForOfIteratorHelper(this._bindingUnits),
            _step3;

        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
            var bindingUnit = _step3.value;

            if (bindingUnit.binding === binding) {
              if (bindingUnit.type === _define.GFXBindingType.SAMPLER) {
                if (bindingUnit.texView !== texView) {
                  bindingUnit.texView = texView;
                  this._isDirty = true;
                }
              } else {
                console.error('Setting binding is not GFXBindingType.SAMPLER.');
              }

              return;
            }
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }
      }
      /**
       * @en Get the specified binding unit.
       * @zh 得到指定的 binding 位置上的GFX绑定单元。
       * @param binding The target binding.
       */

    }, {
      key: "getBindingUnit",
      value: function getBindingUnit(binding) {
        var _iterator4 = _createForOfIteratorHelper(this._bindingUnits),
            _step4;

        try {
          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
            var unit = _step4.value;

            if (unit.binding === binding) {
              return unit;
            }
          }
        } catch (err) {
          _iterator4.e(err);
        } finally {
          _iterator4.f();
        }

        return null;
      }
    }]);

    return GFXBindingLayout;
  }(_define.GFXObject);

  _exports.GFXBindingLayout = GFXBindingLayout;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,