(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "../../core/data/class-decorator.js", "../../core/math/index.js", "../enum.js", "../particle-general-function.js", "./curve-range.js", "../particle.js"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("../../core/data/class-decorator.js"), require("../../core/math/index.js"), require("../enum.js"), require("../particle-general-function.js"), require("./curve-range.js"), require("../particle.js"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.classDecorator, global.index, global._enum, global.particleGeneralFunction, global.curveRange, global.particle);
    global.forceOvertime = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _classDecorator, _index, _enum, _particleGeneralFunction, _curveRange, _particle) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _curveRange = _interopRequireDefault(_curveRange);

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _temp;

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  // tslint:disable: max-line-length
  var FORCE_OVERTIME_RAND_OFFSET = _enum.ModuleRandSeed.FORCE;

  var _temp_v3 = new _index.Vec3();

  var ForceOvertimeModule = (_dec = (0, _classDecorator.ccclass)('cc.ForceOvertimeModule'), _dec2 = (0, _classDecorator.property)({
    displayOrder: 0
  }), _dec3 = (0, _classDecorator.property)({
    type: _curveRange.default,
    range: [-1, 1],
    displayOrder: 2,
    tooltip: 'X 轴方向上的加速度分量'
  }), _dec4 = (0, _classDecorator.property)({
    type: _curveRange.default,
    range: [-1, 1],
    displayOrder: 3,
    tooltip: 'Y 轴方向上的加速度分量'
  }), _dec5 = (0, _classDecorator.property)({
    type: _curveRange.default,
    range: [-1, 1],
    displayOrder: 4,
    tooltip: 'Z 轴方向上的加速度分量'
  }), _dec6 = (0, _classDecorator.property)({
    type: _enum.Space,
    displayOrder: 1,
    tooltip: '加速度计算时采用的坐标'
  }), _dec(_class = (_class2 = (_temp = /*#__PURE__*/function (_ParticleModuleBase) {
    _inherits(ForceOvertimeModule, _ParticleModuleBase);

    _createClass(ForceOvertimeModule, [{
      key: "enable",

      /**
       * @zh 是否启用。
       */
      get: function get() {
        return this._enable;
      },
      set: function set(val) {
        if (this._enable === val) return;
        this._enable = val;
        if (!this.target) return;
        this.target.enableModule(this.name, val, this);
      }
      /**
       * @zh X 轴方向上的加速度分量。
       */

    }]);

    function ForceOvertimeModule() {
      var _this;

      _classCallCheck(this, ForceOvertimeModule);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(ForceOvertimeModule).call(this));

      _initializerDefineProperty(_this, "_enable", _descriptor, _assertThisInitialized(_this));

      _initializerDefineProperty(_this, "x", _descriptor2, _assertThisInitialized(_this));

      _initializerDefineProperty(_this, "y", _descriptor3, _assertThisInitialized(_this));

      _initializerDefineProperty(_this, "z", _descriptor4, _assertThisInitialized(_this));

      _initializerDefineProperty(_this, "space", _descriptor5, _assertThisInitialized(_this));

      _this.randomized = false;
      _this.rotation = void 0;
      _this.needTransform = void 0;
      _this.name = _particle.PARTICLE_MODULE_NAME.FORCE;
      _this.rotation = new _index.Quat();
      _this.needTransform = false;
      _this.needUpdate = true;
      return _this;
    }

    _createClass(ForceOvertimeModule, [{
      key: "update",
      value: function update(space, worldTransform) {
        this.needTransform = (0, _particleGeneralFunction.calculateTransform)(space, this.space, worldTransform, this.rotation);
      }
    }, {
      key: "animate",
      value: function animate(p, dt) {
        var normalizedTime = 1 - p.remainingLifetime / p.startLifetime;

        var force = _index.Vec3.set(_temp_v3, this.x.evaluate(normalizedTime, (0, _index.pseudoRandom)(p.randomSeed + FORCE_OVERTIME_RAND_OFFSET)), this.y.evaluate(normalizedTime, (0, _index.pseudoRandom)(p.randomSeed + FORCE_OVERTIME_RAND_OFFSET)), this.z.evaluate(normalizedTime, (0, _index.pseudoRandom)(p.randomSeed + FORCE_OVERTIME_RAND_OFFSET)));

        if (this.needTransform) {
          _index.Vec3.transformQuat(force, force, this.rotation);
        }

        _index.Vec3.scaleAndAdd(p.velocity, p.velocity, force, dt);

        _index.Vec3.copy(p.ultimateVelocity, p.velocity);
      }
    }]);

    return ForceOvertimeModule;
  }(_particle.ParticleModuleBase), _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "_enable", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return false;
    }
  }), _applyDecoratedDescriptor(_class2.prototype, "enable", [_dec2], Object.getOwnPropertyDescriptor(_class2.prototype, "enable"), _class2.prototype), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "x", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return new _curveRange.default();
    }
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "y", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return new _curveRange.default();
    }
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "z", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return new _curveRange.default();
    }
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "space", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return _enum.Space.Local;
    }
  })), _class2)) || _class); // CCClass.fastDefine('cc.ForceOvertimeModule',ForceOvertimeModule,{
  //     enable : false,
  //     x : new CurveRange(),
  //     y : new CurveRange(),
  //     z : new CurveRange(),
  //     space : Space.Local,
  //     randomized : false
  // });

  _exports.default = ForceOvertimeModule;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkY6L2plbmtpbnMvd29ya3NwYWNlL0NyZWF0b3JfM0QvZWRpdG9yLTNkL3Jlc291cmNlcy8zZC9lbmdpbmUvY29jb3MvcGFydGljbGUvYW5pbWF0b3IvZm9yY2Utb3ZlcnRpbWUudHMiXSwibmFtZXMiOlsiRk9SQ0VfT1ZFUlRJTUVfUkFORF9PRkZTRVQiLCJNb2R1bGVSYW5kU2VlZCIsIkZPUkNFIiwiX3RlbXBfdjMiLCJWZWMzIiwiRm9yY2VPdmVydGltZU1vZHVsZSIsImRpc3BsYXlPcmRlciIsInR5cGUiLCJDdXJ2ZVJhbmdlIiwicmFuZ2UiLCJ0b29sdGlwIiwiU3BhY2UiLCJfZW5hYmxlIiwidmFsIiwidGFyZ2V0IiwiZW5hYmxlTW9kdWxlIiwibmFtZSIsInJhbmRvbWl6ZWQiLCJyb3RhdGlvbiIsIm5lZWRUcmFuc2Zvcm0iLCJQQVJUSUNMRV9NT0RVTEVfTkFNRSIsIlF1YXQiLCJuZWVkVXBkYXRlIiwic3BhY2UiLCJ3b3JsZFRyYW5zZm9ybSIsInAiLCJkdCIsIm5vcm1hbGl6ZWRUaW1lIiwicmVtYWluaW5nTGlmZXRpbWUiLCJzdGFydExpZmV0aW1lIiwiZm9yY2UiLCJzZXQiLCJ4IiwiZXZhbHVhdGUiLCJyYW5kb21TZWVkIiwieSIsInoiLCJ0cmFuc2Zvcm1RdWF0Iiwic2NhbGVBbmRBZGQiLCJ2ZWxvY2l0eSIsImNvcHkiLCJ1bHRpbWF0ZVZlbG9jaXR5IiwiUGFydGljbGVNb2R1bGVCYXNlIiwicHJvcGVydHkiLCJMb2NhbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWFBO0FBQ0EsTUFBTUEsMEJBQTBCLEdBQUdDLHFCQUFlQyxLQUFsRDs7QUFFQSxNQUFNQyxRQUFRLEdBQUcsSUFBSUMsV0FBSixFQUFqQjs7TUFHcUJDLG1CLFdBRHBCLDZCQUFRLHdCQUFSLEMsVUFPSSw4QkFBUztBQUNOQyxJQUFBQSxZQUFZLEVBQUU7QUFEUixHQUFULEMsVUFpQkEsOEJBQVM7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QUFnREosRUFBaEQ7O0FBQ0F0QixvQkFBS29DLElBQUwsQ0FBVWYsQ0FBQyxDQUFDZ0IsZ0JBQVosRUFBOEJoQixDQUFDLENBQUNjLFFBQWhDO0FBQ0g7Ozs7SUF6RjRDRyw0QixtRkFDNUNDLHdCOzs7OzthQUNrQixLOzs7Ozs7O2FBMkJSLElBQUluQyxtQkFBSixFOzs7Ozs7O2FBV0EsSUFBSUEsbUJBQUosRTs7Ozs7OzthQVdBLElBQUlBLG1CQUFKLEU7Ozs7Ozs7YUFVSUcsWUFBTWlDLEs7OzZCQStCekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4vKipcclxuICogQGNhdGVnb3J5IHBhcnRpY2xlXHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgY2NjbGFzcywgcHJvcGVydHkgfSBmcm9tICcuLi8uLi9jb3JlL2RhdGEvY2xhc3MtZGVjb3JhdG9yJztcclxuaW1wb3J0IHsgcHNldWRvUmFuZG9tLCBRdWF0LCBWZWMzIH0gZnJvbSAnLi4vLi4vY29yZS9tYXRoJztcclxuaW1wb3J0IHsgU3BhY2UgfSBmcm9tICcuLi9lbnVtJztcclxuaW1wb3J0IHsgY2FsY3VsYXRlVHJhbnNmb3JtIH0gZnJvbSAnLi4vcGFydGljbGUtZ2VuZXJhbC1mdW5jdGlvbic7XHJcbmltcG9ydCBDdXJ2ZVJhbmdlIGZyb20gJy4vY3VydmUtcmFuZ2UnO1xyXG5pbXBvcnQgeyBNb2R1bGVSYW5kU2VlZCB9IGZyb20gJy4uL2VudW0nO1xyXG5pbXBvcnQgeyBQYXJ0aWNsZU1vZHVsZUJhc2UsIFBBUlRJQ0xFX01PRFVMRV9OQU1FfSBmcm9tICcuLi9wYXJ0aWNsZSc7XHJcblxyXG4vLyB0c2xpbnQ6ZGlzYWJsZTogbWF4LWxpbmUtbGVuZ3RoXHJcbmNvbnN0IEZPUkNFX09WRVJUSU1FX1JBTkRfT0ZGU0VUID0gTW9kdWxlUmFuZFNlZWQuRk9SQ0U7XHJcblxyXG5jb25zdCBfdGVtcF92MyA9IG5ldyBWZWMzKCk7XHJcblxyXG5AY2NjbGFzcygnY2MuRm9yY2VPdmVydGltZU1vZHVsZScpXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvcmNlT3ZlcnRpbWVNb2R1bGUgZXh0ZW5kcyBQYXJ0aWNsZU1vZHVsZUJhc2Uge1xyXG4gICAgQHByb3BlcnR5XHJcbiAgICBfZW5hYmxlOiBCb29sZWFuID0gZmFsc2U7XHJcbiAgICAvKipcclxuICAgICAqIEB6aCDmmK/lkKblkK/nlKjjgIJcclxuICAgICAqL1xyXG4gICAgQHByb3BlcnR5KHtcclxuICAgICAgICBkaXNwbGF5T3JkZXI6IDAsXHJcbiAgICB9KVxyXG4gICAgcHVibGljIGdldCBlbmFibGUgKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9lbmFibGU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldCBlbmFibGUgKHZhbCkge1xyXG4gICAgICAgIGlmICh0aGlzLl9lbmFibGUgPT09IHZhbCkgcmV0dXJuO1xyXG4gICAgICAgIHRoaXMuX2VuYWJsZSA9IHZhbDtcclxuICAgICAgICBpZiAoIXRoaXMudGFyZ2V0KSByZXR1cm47XHJcbiAgICAgICAgdGhpcy50YXJnZXQuZW5hYmxlTW9kdWxlKHRoaXMubmFtZSwgdmFsLCB0aGlzKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEB6aCBYIOi9tOaWueWQkeS4iueahOWKoOmAn+W6puWIhumHj+OAglxyXG4gICAgICovXHJcbiAgICBAcHJvcGVydHkoe1xyXG4gICAgICAgIHR5cGU6IEN1cnZlUmFuZ2UsXHJcbiAgICAgICAgcmFuZ2U6IFstMSwgMV0sXHJcbiAgICAgICAgZGlzcGxheU9yZGVyOiAyLFxyXG4gICAgICAgIHRvb2x0aXA6J1gg6L205pa55ZCR5LiK55qE5Yqg6YCf5bqm5YiG6YePJyxcclxuICAgIH0pXHJcbiAgICBwdWJsaWMgeCA9IG5ldyBDdXJ2ZVJhbmdlKCk7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAemggWSDovbTmlrnlkJHkuIrnmoTliqDpgJ/luqbliIbph4/jgIJcclxuICAgICAqL1xyXG4gICAgQHByb3BlcnR5KHtcclxuICAgICAgICB0eXBlOiBDdXJ2ZVJhbmdlLFxyXG4gICAgICAgIHJhbmdlOiBbLTEsIDFdLFxyXG4gICAgICAgIGRpc3BsYXlPcmRlcjogMyxcclxuICAgICAgICB0b29sdGlwOidZIOi9tOaWueWQkeS4iueahOWKoOmAn+W6puWIhumHjycsXHJcbiAgICB9KVxyXG4gICAgcHVibGljIHkgPSBuZXcgQ3VydmVSYW5nZSgpO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQHpoIFog6L205pa55ZCR5LiK55qE5Yqg6YCf5bqm5YiG6YeP44CCXHJcbiAgICAgKi9cclxuICAgIEBwcm9wZXJ0eSh7XHJcbiAgICAgICAgdHlwZTogQ3VydmVSYW5nZSxcclxuICAgICAgICByYW5nZTogWy0xLCAxXSxcclxuICAgICAgICBkaXNwbGF5T3JkZXI6IDQsXHJcbiAgICAgICAgdG9vbHRpcDonWiDovbTmlrnlkJHkuIrnmoTliqDpgJ/luqbliIbph48nLFxyXG4gICAgfSlcclxuICAgIHB1YmxpYyB6ID0gbmV3IEN1cnZlUmFuZ2UoKTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEB6aCDliqDpgJ/luqborqHnrpfml7bph4fnlKjnmoTlnZDmoIfns7sgW1tTcGFjZV1d44CCXHJcbiAgICAgKi9cclxuICAgIEBwcm9wZXJ0eSh7XHJcbiAgICAgICAgdHlwZTogU3BhY2UsXHJcbiAgICAgICAgZGlzcGxheU9yZGVyOiAxLFxyXG4gICAgICAgIHRvb2x0aXA6J+WKoOmAn+W6puiuoeeul+aXtumHh+eUqOeahOWdkOaghycsXHJcbiAgICB9KVxyXG4gICAgcHVibGljIHNwYWNlID0gU3BhY2UuTG9jYWw7XHJcblxyXG4gICAgLy8gVE9ETzpjdXJyZW50bHkgbm90IHN1cHBvcnRlZFxyXG4gICAgcHVibGljIHJhbmRvbWl6ZWQgPSBmYWxzZTtcclxuXHJcbiAgICBwcml2YXRlIHJvdGF0aW9uOiBRdWF0O1xyXG4gICAgcHJpdmF0ZSBuZWVkVHJhbnNmb3JtOiBib29sZWFuO1xyXG4gICAgcHVibGljIG5hbWUgPSBQQVJUSUNMRV9NT0RVTEVfTkFNRS5GT1JDRTtcclxuXHJcbiAgICBjb25zdHJ1Y3RvciAoKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLnJvdGF0aW9uID0gbmV3IFF1YXQoKTtcclxuICAgICAgICB0aGlzLm5lZWRUcmFuc2Zvcm0gPSBmYWxzZTtcclxuICAgICAgICB0aGlzLm5lZWRVcGRhdGUgPSB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB1cGRhdGUgKHNwYWNlLCB3b3JsZFRyYW5zZm9ybSkge1xyXG4gICAgICAgIHRoaXMubmVlZFRyYW5zZm9ybSA9IGNhbGN1bGF0ZVRyYW5zZm9ybShzcGFjZSwgdGhpcy5zcGFjZSwgd29ybGRUcmFuc2Zvcm0sIHRoaXMucm90YXRpb24pO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhbmltYXRlIChwLCBkdCkge1xyXG4gICAgICAgIGNvbnN0IG5vcm1hbGl6ZWRUaW1lID0gMSAtIHAucmVtYWluaW5nTGlmZXRpbWUgLyBwLnN0YXJ0TGlmZXRpbWU7XHJcbiAgICAgICAgY29uc3QgZm9yY2UgPSBWZWMzLnNldChfdGVtcF92MywgdGhpcy54LmV2YWx1YXRlKG5vcm1hbGl6ZWRUaW1lLCBwc2V1ZG9SYW5kb20ocC5yYW5kb21TZWVkICsgRk9SQ0VfT1ZFUlRJTUVfUkFORF9PRkZTRVQpKSEsIHRoaXMueS5ldmFsdWF0ZShub3JtYWxpemVkVGltZSwgcHNldWRvUmFuZG9tKHAucmFuZG9tU2VlZCArIEZPUkNFX09WRVJUSU1FX1JBTkRfT0ZGU0VUKSkhLCB0aGlzLnouZXZhbHVhdGUobm9ybWFsaXplZFRpbWUsIHBzZXVkb1JhbmRvbShwLnJhbmRvbVNlZWQgKyBGT1JDRV9PVkVSVElNRV9SQU5EX09GRlNFVCkpISk7XHJcbiAgICAgICAgaWYgKHRoaXMubmVlZFRyYW5zZm9ybSkge1xyXG4gICAgICAgICAgICBWZWMzLnRyYW5zZm9ybVF1YXQoZm9yY2UsIGZvcmNlLCB0aGlzLnJvdGF0aW9uKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgVmVjMy5zY2FsZUFuZEFkZChwLnZlbG9jaXR5LCBwLnZlbG9jaXR5LCBmb3JjZSwgZHQpO1xyXG4gICAgICAgIFZlYzMuY29weShwLnVsdGltYXRlVmVsb2NpdHksIHAudmVsb2NpdHkpO1xyXG4gICAgfVxyXG59XHJcblxyXG4vLyBDQ0NsYXNzLmZhc3REZWZpbmUoJ2NjLkZvcmNlT3ZlcnRpbWVNb2R1bGUnLEZvcmNlT3ZlcnRpbWVNb2R1bGUse1xyXG4vLyAgICAgZW5hYmxlIDogZmFsc2UsXHJcbi8vICAgICB4IDogbmV3IEN1cnZlUmFuZ2UoKSxcclxuLy8gICAgIHkgOiBuZXcgQ3VydmVSYW5nZSgpLFxyXG4vLyAgICAgeiA6IG5ldyBDdXJ2ZVJhbmdlKCksXHJcbi8vICAgICBzcGFjZSA6IFNwYWNlLkxvY2FsLFxyXG4vLyAgICAgcmFuZG9taXplZCA6IGZhbHNlXHJcbi8vIH0pO1xyXG4iXX0=