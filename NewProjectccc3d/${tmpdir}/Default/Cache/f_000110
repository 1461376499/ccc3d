(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "../../components/component.js", "../../data/class-decorator.js", "../../math/index.js", "../../value-types/index.js", "../../renderer/scene/light.js"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("../../components/component.js"), require("../../data/class-decorator.js"), require("../../math/index.js"), require("../../value-types/index.js"), require("../../renderer/scene/light.js"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.component, global.classDecorator, global.index, global.index, global.light);
    global.lightComponent = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _component, _classDecorator, _index, _index2, _light) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LightComponent = _exports.PhotometricTerm = void 0;

  var _dec, _class, _class2, _descriptor, _descriptor2, _descriptor3, _temp, _dec2, _dec3, _dec4, _dec5, _dec6, _class4, _class5, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _class6, _temp2;

  function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  var PhotometricTerm = (0, _index2.Enum)({
    LUMINOUS_POWER: 0,
    LUMINANCE: 1
  });
  /**
   * @en static light settings.
   * @zh 静态灯光设置
   */

  _exports.PhotometricTerm = PhotometricTerm;
  var StaticLightSettings = (_dec = (0, _classDecorator.ccclass)('cc.StaticLightSettings'), _dec(_class = (_class2 = (_temp = /*#__PURE__*/function () {
    function StaticLightSettings() {
      _classCallCheck(this, StaticLightSettings);

      _initializerDefineProperty(this, "_editorOnly", _descriptor, this);

      _initializerDefineProperty(this, "_bakeable", _descriptor2, this);

      _initializerDefineProperty(this, "_castShadow", _descriptor3, this);
    }

    _createClass(StaticLightSettings, [{
      key: "editorOnly",

      /**
       * @en editor only.
       * @zh 是否只在编辑器里生效。
       */
      get: function get() {
        return this._editorOnly;
      },
      set: function set(val) {
        this._editorOnly = val;
      }
      /**
       * @en bakeable.
       * @zh 是否可烘培。
       */

    }, {
      key: "bakeable",
      get: function get() {
        return this._bakeable;
      },
      set: function set(val) {
        this._bakeable = val;
      }
      /**
       * @en cast shadow.
       * @zh 是否投射阴影。
       */

    }, {
      key: "castShadow",
      get: function get() {
        return this._castShadow;
      },
      set: function set(val) {
        this._castShadow = val;
      }
    }]);

    return StaticLightSettings;
  }(), _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "_editorOnly", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return false;
    }
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "_bakeable", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return false;
    }
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "_castShadow", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return false;
    }
  }), _applyDecoratedDescriptor(_class2.prototype, "editorOnly", [_classDecorator.property], Object.getOwnPropertyDescriptor(_class2.prototype, "editorOnly"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "bakeable", [_classDecorator.property], Object.getOwnPropertyDescriptor(_class2.prototype, "bakeable"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "castShadow", [_classDecorator.property], Object.getOwnPropertyDescriptor(_class2.prototype, "castShadow"), _class2.prototype)), _class2)) || _class); // tslint:disable: no-shadowed-variable

  (function (_LightComponent) {})(LightComponent || (_exports.LightComponent = LightComponent = {})); // tslint:enable: no-shadowed-variable


  var LightComponent = (_dec2 = (0, _classDecorator.ccclass)('cc.LightComponent'), _dec3 = (0, _classDecorator.property)({
    tooltip: 'i18n:lights.color'
  }), _dec4 = (0, _classDecorator.property)({
    tooltip: 'i18n:lights.use_color_temperature'
  }), _dec5 = (0, _classDecorator.property)({
    slide: true,
    range: [1000, 15000, 1],
    tooltip: 'i18n:lights.color_temperature'
  }), _dec6 = (0, _classDecorator.property)({
    type: StaticLightSettings
  }), _dec2(_class4 = (_class5 = (_temp2 = _class6 = /*#__PURE__*/function (_Component) {
    _inherits(LightComponent, _Component);

    _createClass(LightComponent, [{
      key: "color",

      /**
       * @en
       * Color of the light.
       * @zh
       * 光源颜色。
       */
      get: function get() {
        return this._color;
      },
      set: function set(val) {
        this._color = val;

        if (this._light) {
          this._light.color.x = val.r / 255.0;
          this._light.color.y = val.g / 255.0;
          this._light.color.z = val.b / 255.0;
        }
      }
      /**
       * @en
       * Whether to enable light color temperature.
       * @zh
       * 是否启用光源色温。
       */

    }, {
      key: "useColorTemperature",
      get: function get() {
        return this._useColorTemperature;
      },
      set: function set(enable) {
        this._useColorTemperature = enable;

        if (this._light) {
          this._light.useColorTemperature = enable;
        }
      }
      /**
       * @en
       * The light color temperature.
       * @zh
       * 光源色温。
       */

    }, {
      key: "colorTemperature",
      get: function get() {
        return this._colorTemperature;
      },
      set: function set(val) {
        this._colorTemperature = val;

        if (this._light) {
          this._light.colorTemperature = val;
        }
      }
      /**
       * @en
       * static light settings.
       * @zh
       * 静态灯光设置。
       */

    }, {
      key: "staticSettings",
      get: function get() {
        return this._staticSettings;
      },
      set: function set(val) {
        this._staticSettings = val;
      }
      /**
       * @en
       * The light type.
       * @zh
       * 光源类型。
       */

    }, {
      key: "type",
      get: function get() {
        return this._type;
      }
    }]);

    function LightComponent() {
      var _this;

      _classCallCheck(this, LightComponent);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(LightComponent).call(this));

      _initializerDefineProperty(_this, "_color", _descriptor4, _assertThisInitialized(_this));

      _initializerDefineProperty(_this, "_useColorTemperature", _descriptor5, _assertThisInitialized(_this));

      _initializerDefineProperty(_this, "_colorTemperature", _descriptor6, _assertThisInitialized(_this));

      _initializerDefineProperty(_this, "_staticSettings", _descriptor7, _assertThisInitialized(_this));

      _this._type = _light.LightType.UNKNOWN;
      _this._lightType = void 0;
      _this._light = null;
      _this._lightType = _light.Light;
      return _this;
    }

    _createClass(LightComponent, [{
      key: "onLoad",
      value: function onLoad() {
        this._createLight();
      }
    }, {
      key: "onEnable",
      value: function onEnable() {
        this._attachToScene();
      }
    }, {
      key: "onDisable",
      value: function onDisable() {
        this._detachFromScene();
      }
    }, {
      key: "onDestroy",
      value: function onDestroy() {
        this._destroyLight();
      }
    }, {
      key: "_createLight",
      value: function _createLight() {
        if (!this._light) {
          this._light = cc.director.root.createLight(this._lightType);
        }

        this.color = this._color;
        this.useColorTemperature = this._useColorTemperature;
        this.colorTemperature = this._colorTemperature;
        this._light.node = this.node;
      }
    }, {
      key: "_destroyLight",
      value: function _destroyLight() {
        if (this._light) {
          cc.director.root.destroyLight(this);
          this._light = null;
        }
      }
    }, {
      key: "_attachToScene",
      value: function _attachToScene() {
        this._detachFromScene();

        if (this._light && !this._light.scene && this.node.scene) {
          switch (this._type) {
            case _light.LightType.DIRECTIONAL:
              this._getRenderScene().addDirectionalLight(this._light);

              this._getRenderScene().setMainLight(this._light);

              break;

            case _light.LightType.SPHERE:
              this._getRenderScene().addSphereLight(this._light);

              break;

            case _light.LightType.SPOT:
              this._getRenderScene().addSpotLight(this._light);

              break;
          }
        }
      }
    }, {
      key: "_detachFromScene",
      value: function _detachFromScene() {
        if (this._light && this._light.scene) {
          switch (this._type) {
            case _light.LightType.DIRECTIONAL:
              var scene = this._light.scene;
              scene.removeDirectionalLight(this._light);
              scene.unsetMainLight(this._light);
              break;

            case _light.LightType.SPHERE:
              this._light.scene.removeSphereLight(this._light);

              break;

            case _light.LightType.SPOT:
              this._light.scene.removeSpotLight(this._light);

              break;
          }
        }
      }
    }]);

    return LightComponent;
  }(_component.Component), _class6.Type = _light.LightType, _class6.PhotometricTerm = PhotometricTerm, _temp2), (_descriptor4 = _applyDecoratedDescriptor(_class5.prototype, "_color", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return _index.Color.WHITE.clone();
    }
  }), _descriptor5 = _applyDecoratedDescriptor(_class5.prototype, "_useColorTemperature", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return false;
    }
  }), _descriptor6 = _applyDecoratedDescriptor(_class5.prototype, "_colorTemperature", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return 6550;
    }
  }), _descriptor7 = _applyDecoratedDescriptor(_class5.prototype, "_staticSettings", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return new StaticLightSettings();
    }
  }), _applyDecoratedDescriptor(_class5.prototype, "color", [_dec3], Object.getOwnPropertyDescriptor(_class5.prototype, "color"), _class5.prototype), _applyDecoratedDescriptor(_class5.prototype, "useColorTemperature", [_dec4], Object.getOwnPropertyDescriptor(_class5.prototype, "useColorTemperature"), _class5.prototype), _applyDecoratedDescriptor(_class5.prototype, "colorTemperature", [_dec5], Object.getOwnPropertyDescriptor(_class5.prototype, "colorTemperature"), _class5.prototype), _applyDecoratedDescriptor(_class5.prototype, "staticSettings", [_dec6], Object.getOwnPropertyDescriptor(_class5.prototype, "staticSettings"), _class5.prototype)), _class5)) || _class4);
  _exports.LightComponent = LightComponent;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,