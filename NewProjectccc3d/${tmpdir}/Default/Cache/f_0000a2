(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "../data/class-decorator.js", "../data/instantiate-jit.js", "../utils/js.js", "../value-types/index.js", "./asset.js", "../default-constants.js"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("../data/class-decorator.js"), require("../data/instantiate-jit.js"), require("../utils/js.js"), require("../value-types/index.js"), require("./asset.js"), require("../default-constants.js"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.classDecorator, global.instantiateJit, global.js, global.index, global.asset, global.defaultConstants);
    global.prefab = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _classDecorator, _instantiateJit, _js, _index, _asset, _defaultConstants) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _class, _class2, _descriptor, _descriptor2, _descriptor3, _class3, _temp;

  function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * Prefab 创建实例所用的优化策略，配合 [[optimizationPolicy]] 使用。
   *
   * @enum Prefab.OptimizationPolicy
   * @since 1.10.0
   */
  var OptimizationPolicy = (0, _index.Enum)({
    /**
     * 根据创建次数自动调整优化策略。初次创建实例时，行为等同 SINGLE_INSTANCE，多次创建后将自动采用 MULTI_INSTANCE。
     * @property {Number} AUTO
     */
    AUTO: 0,

    /**
     * 优化单次创建性能。<br>
     * 该选项会跳过针对这个 prefab 的代码生成优化操作。当该 prefab 加载后，一般只会创建一个实例时，请选择此项。
     * @property {Number} SINGLE_INSTANCE
     */
    SINGLE_INSTANCE: 1,

    /**
     * 优化多次创建性能。<br>
     * 该选项会启用针对这个 prefab 的代码生成优化操作。当该 prefab 加载后，一般会创建多个实例时，请选择此项。如果该 prefab 在场景中的节点启用了自动关联，并且在场景中有多份实例，也建议选择此项。
     * @property {Number} MULTI_INSTANCE
     */
    MULTI_INSTANCE: 2
  });
  /**
   * @en Class for prefab handling.
   * @zh 预制资源类。
   */

  var Prefab = (_dec = (0, _classDecorator.ccclass)('cc.Prefab'), _dec(_class = (_class2 = (_temp = _class3 = /*#__PURE__*/function (_Asset) {
    _inherits(Prefab, _Asset);

    /**
     * @property {Node} data - the main cc.Node in the prefab
     */

    /**
     * @zh
     * 设置实例化这个 prefab 时所用的优化策略。根据使用情况设置为合适的值，能优化该 prefab 实例化所用的时间。
     * @en
     * Indicates the optimization policy for instantiating this prefab.
     * Set to a suitable value based on usage, can optimize the time it takes to instantiate this prefab.
     *
     * @property {Prefab.OptimizationPolicy} optimizationPolicy
     * @default Prefab.OptimizationPolicy.AUTO
     * @since 1.10.0
     * @example
     * ```typescript
     * prefab.optimizationPolicy = cc.Prefab.OptimizationPolicy.MULTI_INSTANCE;
     * ```
     */

    /**
     * @en Indicates the raw assets of this prefab can be load after prefab loaded.
     * @zh 指示该 Prefab 依赖的资源可否在 Prefab 加载后再延迟加载。
     * @default false
     */
    function Prefab() {
      var _this;

      _classCallCheck(this, Prefab);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(Prefab).call(this));
      /**
       * Cache function to optimize instance creaton.
       * @property {Function} _createFunction
       * @private
       */

      _initializerDefineProperty(_this, "data", _descriptor, _assertThisInitialized(_this));

      _initializerDefineProperty(_this, "optimizationPolicy", _descriptor2, _assertThisInitialized(_this));

      _initializerDefineProperty(_this, "asyncLoadAssets", _descriptor3, _assertThisInitialized(_this));

      _this._createFunction = void 0;
      _this._instantiatedTimes = void 0;
      _this._createFunction = null;
      _this._instantiatedTimes = 0;
      return _this;
    }

    _createClass(Prefab, [{
      key: "createNode",
      value: function createNode(cb) {
        var node = cc.instantiate(this);
        node.name = this.name;
        cb(null, node);
      }
      /**
       * @en
       * Dynamically translation prefab data into minimized code.<br/>
       * This method will be called automatically before the first time the prefab being instantiated,<br/>
       * but you can re-call to refresh the create function once you modified the original prefab data in script.
       * @zh
       * 将预制数据动态转换为最小化代码。<br/>
       * 此方法将在第一次实例化预制件之前自动调用，<br/>
       * 但是您可以在脚本中修改原始预制数据后重新调用以刷新创建功能。
       */

    }, {
      key: "compileCreateFunction",
      value: function compileCreateFunction() {
        this._createFunction = (0, _instantiateJit.compile)(this.data);
      } // just instantiate, will not initialize the Node, this will be called during Node's initialization.
      // @param {Node} [rootToRedirect] - specify an instantiated prefabRoot that all references to prefabRoot in prefab
      //                                  will redirect to

    }, {
      key: "_doInstantiate",
      value: function _doInstantiate(rootToRedirect) {
        if (this.data._prefab) {
          // prefab asset is always synced
          this.data._prefab._synced = true;
        } else {
          // temp guard code
          cc.warnID(3700);
        }

        if (!this._createFunction) {
          this.compileCreateFunction();
        }

        return this._createFunction(rootToRedirect); // this.data._instantiate();
      }
    }, {
      key: "_instantiate",
      value: function _instantiate() {
        var node;
        var useJit = false;

        if (_defaultConstants.SUPPORT_JIT) {
          if (this.optimizationPolicy === OptimizationPolicy.SINGLE_INSTANCE) {
            useJit = false;
          } else if (this.optimizationPolicy === OptimizationPolicy.MULTI_INSTANCE) {
            useJit = true;
          } else {
            // auto
            useJit = this._instantiatedTimes + 1 >= Prefab.OptimizationPolicyThreshold;
          }
        }

        if (useJit) {
          // instantiate node
          node = this._doInstantiate(); // initialize node

          this.data._instantiate(node);
        } else {
          // prefab asset is always synced
          this.data._prefab._synced = true; // instantiate node

          node = this.data._instantiate();
        }

        ++this._instantiatedTimes;
        return node;
      }
    }]);

    return Prefab;
  }(_asset.Asset), _class3.OptimizationPolicy = OptimizationPolicy, _class3.OptimizationPolicyThreshold = 3, _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "data", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return null;
    }
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "optimizationPolicy", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return OptimizationPolicy.AUTO;
    }
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "asyncLoadAssets", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return false;
    }
  })), _class2)) || _class);
  _exports.default = Prefab;
  cc.Prefab = Prefab;

  if (_defaultConstants.ALIPAY || _defaultConstants.RUNTIME_BASED) {
    cc._Prefab = Prefab;
  } else {
    (0, _js.obsolete)(cc, 'cc._Prefab', 'Prefab');
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,