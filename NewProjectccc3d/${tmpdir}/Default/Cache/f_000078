(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["../utils/deprecated.js", "./color.js", "./mat3.js", "./mat4.js", "./quat.js", "./vec2.js", "./vec3.js", "./vec4.js"], factory);
  } else if (typeof exports !== "undefined") {
    factory(require("../utils/deprecated.js"), require("./color.js"), require("./mat3.js"), require("./mat4.js"), require("./quat.js"), require("./vec2.js"), require("./vec3.js"), require("./vec4.js"));
  } else {
    var mod = {
      exports: {}
    };
    factory(global.deprecated, global.color, global.mat3, global.mat4, global.quat, global.vec2, global.vec3, global.vec4);
    global.deprecated = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_deprecated, _color, _mat, _mat2, _quat, _vec, _vec2, _vec3) {
  "use strict";

  /**
   * @hidden
   */
  (0, _deprecated.replaceProperty)(_vec.Vec2, 'Vec2', [{
    name: 'sub',
    newName: 'subtract',
    target: _vec.Vec2,
    targetName: 'Vec2'
  }, {
    name: 'mul',
    newName: 'multiply',
    target: _vec.Vec2,
    targetName: 'Vec2'
  }, {
    name: 'div',
    newName: 'divide',
    target: _vec.Vec2,
    targetName: 'Vec2'
  }, {
    name: 'dist',
    newName: 'distance',
    target: _vec.Vec2,
    targetName: 'Vec2'
  }, {
    name: 'sqrDist',
    newName: 'squaredDistance',
    target: _vec.Vec2,
    targetName: 'Vec2'
  }, {
    name: 'mag',
    newName: 'len',
    target: _vec.Vec2,
    targetName: 'Vec2'
  }, {
    name: 'sqrMag',
    newName: 'lengthSqr',
    target: _vec.Vec2,
    targetName: 'Vec2'
  }, {
    name: 'scale',
    newName: 'multiplyScalar',
    target: _vec.Vec2,
    targetName: 'Vec2'
  }, {
    name: 'exactEquals',
    newName: 'strictEquals',
    target: _vec.Vec2,
    targetName: 'Vec2'
  }]);
  (0, _deprecated.replaceProperty)(_vec.Vec2.prototype, 'Vec2', [{
    name: 'mag',
    newName: 'length',
    target: _vec.Vec2.prototype,
    targetName: 'Vec2'
  }, {
    name: 'magSqr',
    newName: 'lengthSqr',
    target: _vec.Vec2.prototype,
    targetName: 'Vec2'
  }, {
    name: 'scale',
    newName: 'multiplyScalar',
    target: _vec.Vec2.prototype,
    targetName: 'Vec2'
  }, {
    name: 'exactEquals',
    newName: 'strictEquals',
    target: _vec.Vec2.prototype,
    targetName: 'Vec2'
  }]); // 与新添加API 接口重名，需尽快更改后删除此弃用

  (0, _deprecated.removeProperty)(_vec.Vec2.prototype, 'vmath', [{
    name: 'divide'
  }]);
  (0, _deprecated.replaceProperty)(_vec2.Vec3, 'Vec3', [{
    name: 'sub',
    newName: 'subtract',
    target: _vec2.Vec3,
    targetName: 'Vec3'
  }, {
    name: 'mul',
    newName: 'multiply',
    target: _vec2.Vec3,
    targetName: 'Vec3'
  }, {
    name: 'div',
    newName: 'divide',
    target: _vec2.Vec3,
    targetName: 'Vec3'
  }, {
    name: 'dist',
    newName: 'distance',
    target: _vec2.Vec3,
    targetName: 'Vec3'
  }, {
    name: 'sqrDist',
    newName: 'squaredDistance',
    target: _vec2.Vec3,
    targetName: 'Vec3'
  }, {
    name: 'mag',
    newName: 'len',
    target: _vec2.Vec3,
    targetName: 'Vec3'
  }, {
    name: 'sqrMag',
    newName: 'lengthSqr',
    target: _vec2.Vec3,
    targetName: 'Vec3'
  }, {
    name: 'scale',
    newName: 'multiplyScalar',
    target: _vec2.Vec3,
    targetName: 'Vec3'
  }, {
    name: 'exactEquals',
    newName: 'strictEquals',
    target: _vec2.Vec3,
    targetName: 'Vec3'
  }]);
  (0, _deprecated.replaceProperty)(_vec2.Vec3.prototype, 'Vec3', [{
    name: 'mag',
    newName: 'length',
    target: _vec2.Vec3.prototype,
    targetName: 'Vec3'
  }, {
    name: 'magSqr',
    newName: 'lengthSqr',
    target: _vec2.Vec3.prototype,
    targetName: 'Vec3'
  }, {
    name: 'scale',
    newName: 'multiplyScalar',
    target: _vec2.Vec3.prototype,
    targetName: 'Vec3'
  }, {
    name: 'exactEquals',
    newName: 'strictEquals',
    target: _vec2.Vec3.prototype,
    targetName: 'Vec3'
  }]); // 与新添加API 接口重名，需尽快更改后删除此弃用

  (0, _deprecated.removeProperty)(_vec2.Vec3.prototype, 'vmath', [{
    name: 'divide'
  }]);
  (0, _deprecated.replaceProperty)(_vec3.Vec4, 'Vec4', [{
    name: 'sub',
    newName: 'subtract',
    target: _vec3.Vec4,
    targetName: 'Vec4'
  }, {
    name: 'mul',
    newName: 'multiply',
    target: _vec3.Vec4,
    targetName: 'Vec4'
  }, {
    name: 'div',
    newName: 'divide',
    target: _vec3.Vec4,
    targetName: 'Vec4'
  }, {
    name: 'dist',
    newName: 'distance',
    target: _vec3.Vec4,
    targetName: 'Vec4'
  }, {
    name: 'sqrDist',
    newName: 'squaredDistance',
    target: _vec3.Vec4,
    targetName: 'Vec4'
  }, {
    name: 'mag',
    newName: 'len',
    target: _vec3.Vec4,
    targetName: 'Vec4'
  }, {
    name: 'sqrMag',
    newName: 'lengthSqr',
    target: _vec3.Vec4,
    targetName: 'Vec4'
  }, {
    name: 'scale',
    newName: 'multiplyScalar',
    target: _vec3.Vec4,
    targetName: 'Vec4'
  }, {
    name: 'exactEquals',
    newName: 'strictEquals',
    target: _vec3.Vec4,
    targetName: 'Vec4'
  }]);
  (0, _deprecated.replaceProperty)(_vec3.Vec4.prototype, 'Vec4', [{
    name: 'mag',
    newName: 'length',
    target: _vec3.Vec4.prototype,
    targetName: 'Vec4'
  }, {
    name: 'magSqr',
    newName: 'lengthSqr',
    target: _vec3.Vec4.prototype,
    targetName: 'Vec4'
  }, {
    name: 'scale',
    newName: 'multiplyScalar',
    target: _vec3.Vec4.prototype,
    targetName: 'Vec4'
  }, {
    name: 'exactEquals',
    newName: 'strictEquals',
    target: _vec3.Vec4.prototype,
    targetName: 'Vec4'
  }]); // 与新添加API 接口重名，需尽快更改后删除此弃用

  (0, _deprecated.removeProperty)(_vec3.Vec4.prototype, 'vmath', [{
    name: 'divide'
  }]);
  (0, _deprecated.replaceProperty)(_quat.Quat, 'Quat', [{
    name: 'mag',
    newName: 'len',
    target: _quat.Quat,
    targetName: 'Quat'
  }, {
    name: 'mul',
    newName: 'multiply',
    target: _quat.Quat,
    targetName: 'Quat'
  }, {
    name: 'sqrMag',
    newName: 'lengthSqr',
    target: _quat.Quat,
    targetName: 'Quat'
  }, {
    name: 'scale',
    newName: 'multiplyScalar',
    target: _quat.Quat,
    targetName: 'Quat'
  }, {
    name: 'exactEquals',
    newName: 'strictEquals',
    target: _quat.Quat,
    targetName: 'Quat'
  }]);
  (0, _deprecated.replaceProperty)(_quat.Quat.prototype, 'Quat', [{
    name: 'scale',
    newName: 'multiplyScalar',
    target: _quat.Quat.prototype,
    targetName: 'Quat'
  }, {
    name: 'exactEquals',
    newName: 'strictEquals',
    target: _quat.Quat.prototype,
    targetName: 'Quat'
  }]);
  (0, _deprecated.replaceProperty)(_color.Color, 'Color', [{
    name: 'sub',
    newName: 'subtract',
    target: _color.Color,
    targetName: 'Color'
  }, {
    name: 'mul',
    newName: 'multiply',
    target: _color.Color,
    targetName: 'Color'
  }, {
    name: 'div',
    newName: 'divide',
    target: _color.Color,
    targetName: 'Color'
  }, {
    name: 'exactEquals',
    newName: 'strictEquals',
    target: _color.Color,
    targetName: 'Color'
  }, {
    name: 'fromHex',
    newName: 'fromHEX',
    customFunction: function customFunction() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var arg1 = args[1].toString(16);
      return cc.Color.fromHEX(args[0], arg1);
    }
  }]);
  (0, _deprecated.replaceProperty)(_mat.Mat3, 'Mat3', [{
    name: 'sub',
    newName: 'subtract',
    target: _mat.Mat3,
    targetName: 'Mat3'
  }, {
    name: 'mul',
    newName: 'multiply',
    target: _mat.Mat3,
    targetName: 'Mat3'
  }, {
    name: 'exactEquals',
    newName: 'strictEquals',
    target: _mat.Mat3,
    targetName: 'Mat3'
  }]);
  (0, _deprecated.replaceProperty)(_mat.Mat3.prototype, 'Mat3', [{
    name: 'sub',
    newName: 'subtract',
    target: _mat.Mat3.prototype,
    targetName: 'Mat3'
  }, {
    name: 'mul',
    newName: 'multiply',
    target: _mat.Mat3.prototype,
    targetName: 'Mat3'
  }, {
    name: 'mulScalar',
    newName: 'multiplyScalar',
    target: _mat.Mat3.prototype,
    targetName: 'Mat3'
  }, {
    name: 'exactEquals',
    newName: 'strictEquals',
    target: _mat.Mat3.prototype,
    targetName: 'Mat3'
  }]);
  (0, _deprecated.replaceProperty)(_mat2.Mat4, 'Mat4', [{
    name: 'sub',
    newName: 'subtract',
    target: _mat2.Mat4,
    targetName: 'Mat4'
  }, {
    name: 'mul',
    newName: 'multiply',
    target: _mat2.Mat4,
    targetName: 'Mat4'
  }, {
    name: 'exactEquals',
    newName: 'strictEquals',
    target: _mat2.Mat4,
    targetName: 'Mat4'
  }]);
  (0, _deprecated.replaceProperty)(_mat2.Mat4.prototype, 'Mat4', [{
    name: 'sub',
    newName: 'subtract',
    target: _mat2.Mat4.prototype,
    targetName: 'Mat4'
  }, {
    name: 'mul',
    newName: 'multiply',
    target: _mat2.Mat4.prototype,
    targetName: 'Mat4'
  }, {
    name: 'mulScalar',
    newName: 'multiplyScalar',
    target: _mat2.Mat4.prototype,
    targetName: 'Mat4'
  }, {
    name: 'exactEquals',
    newName: 'strictEquals',
    target: _mat2.Mat4.prototype,
    targetName: 'Mat4'
  }]);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,