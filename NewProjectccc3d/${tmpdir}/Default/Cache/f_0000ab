(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "../data/class-decorator.js", "../value-types/enum.js", "./asset-enum.js", "./texture-base.js"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("../data/class-decorator.js"), require("../value-types/enum.js"), require("./asset-enum.js"), require("./texture-base.js"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.classDecorator, global._enum, global.assetEnum, global.textureBase);
    global.renderTexture = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _classDecorator, _enum, _assetEnum, _textureBase) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.RenderTexture = void 0;

  var _dec, _dec2, _class, _class2, _descriptor, _class3, _temp;

  function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

  function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  (0, _enum.ccenum)(_assetEnum.DepthStencilFormat);
  var RenderTexture = (_dec = (0, _classDecorator.ccclass)('cc.RenderTexture'), _dec2 = (0, _classDecorator.property)({
    type: _assetEnum.DepthStencilFormat
  }), _dec(_class = (_class2 = (_temp = _class3 = /*#__PURE__*/function (_TextureBase) {
    _inherits(RenderTexture, _TextureBase);

    function RenderTexture() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, RenderTexture);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RenderTexture)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this._window = null;

      _initializerDefineProperty(_this, "_depthStencilFormat", _descriptor, _assertThisInitialized(_this));

      return _this;
    }

    _createClass(RenderTexture, [{
      key: "getGFXWindow",
      value: function getGFXWindow() {
        return this._window;
      }
    }, {
      key: "getGFXTextureView",
      value: function getGFXTextureView()
      /* TODO: Explicit since ISSUE https://github.com/microsoft/TypeScript/issues/31280 , changes required once the issue is fixed. */
      {
        return this._window ? this._window.colorTexView : null;
      }
    }, {
      key: "getGFXStencilTexture",
      value: function getGFXStencilTexture()
      /* TODO: Explicit since ISSUE https://github.com/microsoft/TypeScript/issues/31280 , changes required once the issue is fixed. */
      {
        return this._window ? this._window.depthStencilTexView : null;
      }
    }, {
      key: "reset",
      value: function reset(info) {
        if (info) {
          this._width = info.width;
          this._height = info.height;

          if (info.colorFormat) {
            this._format = info.colorFormat;
          }

          if (info.depthStencilFormat) {
            this._depthStencilFormat = info.depthStencilFormat;
          }

          this._tryResetWindow();

          this.emit('resize', this);
        }
      }
    }, {
      key: "destroy",
      value: function destroy() {
        if (this._window) {
          cc.director.root.destroyWindow(this._window);
          this._window = null;
        }

        return _get(_getPrototypeOf(RenderTexture.prototype), "destroy", this).call(this);
      }
    }, {
      key: "onLoaded",
      value: function onLoaded() {
        this._tryResetWindow();
      }
    }, {
      key: "_serialize",
      value: function _serialize(exporting) {
        return {
          base: _get(_getPrototypeOf(RenderTexture.prototype), "_serialize", this).call(this),
          name: this._name,
          width: this._width,
          height: this._height,
          colorFormat: this._format,
          depthStencilFormat: this._depthStencilFormat
        };
      }
    }, {
      key: "_deserialize",
      value: function _deserialize(serializeData, handle) {
        _get(_getPrototypeOf(RenderTexture.prototype), "_deserialize", this).call(this, serializeData.base, handle);

        var data = serializeData;
        this.name = data.name || '';
        this._width = data.width;
        this._height = data.height;
        this._format = data.colorFormat;
        this._depthStencilFormat = data.depthStencilFormat;
      }
    }, {
      key: "_tryResetWindow",
      value: function _tryResetWindow() {
        var device = this._getGFXDevice();

        if (!device) {
          return;
        }

        if (this._window) {
          this._window.destroy();
        }

        this._createWindow(device);
      }
    }, {
      key: "_createWindow",
      value: function _createWindow(device) {
        var config = {
          title: this.name,
          isOffscreen: true,
          width: this._width,
          height: this._height,
          colorFmt: this._format,
          depthStencilFmt: this._depthStencilFormat
        };

        if (this._window) {
          this._window.initialize(config);

          return this._window;
        }

        this._window = cc.director.root.createWindow(config);
        this.loaded = true;
        this.emit('load');
      }
    }, {
      key: "width",
      get: function get() {
        return this._width;
      },
      set: function set(value) {
        this._width = value;
        this.reset();
      }
    }, {
      key: "height",
      get: function get() {
        return this._height;
      },
      set: function set(value) {
        this._height = value;
        this.reset();
      }
    }, {
      key: "depthStencilFormat",
      get: function get() {
        return this._depthStencilFormat;
      },
      set: function set(value) {
        this._depthStencilFormat = value;
        this.reset();
      }
    }]);

    return RenderTexture;
  }(_textureBase.TextureBase), _class3.DepthStencilFormat = _assetEnum.DepthStencilFormat, _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "_depthStencilFormat", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return _assetEnum.DepthStencilFormat.NONE;
    }
  }), _applyDecoratedDescriptor(_class2.prototype, "width", [_classDecorator.property], Object.getOwnPropertyDescriptor(_class2.prototype, "width"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "height", [_classDecorator.property], Object.getOwnPropertyDescriptor(_class2.prototype, "height"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "depthStencilFormat", [_dec2], Object.getOwnPropertyDescriptor(_class2.prototype, "depthStencilFormat"), _class2.prototype)), _class2)) || _class);
  _exports.RenderTexture = RenderTexture;
  cc.RenderTexture = RenderTexture;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,