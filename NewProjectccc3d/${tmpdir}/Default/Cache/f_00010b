(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "../assets/texture-cube.js", "../data/class-decorator.js", "../data/utils/attribute.js", "../math/index.js", "../renderer/scene/ambient.js"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("../assets/texture-cube.js"), require("../data/class-decorator.js"), require("../data/utils/attribute.js"), require("../math/index.js"), require("../renderer/scene/ambient.js"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.textureCube, global.classDecorator, global.attribute, global.index, global.ambient);
    global.sceneGlobals = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _textureCube, _classDecorator, _attribute, _index, _ambient) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SceneGlobals = _exports.PlanarShadowInfo = _exports.SkyboxInfo = _exports.AmbientInfo = void 0;

  var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2, _descriptor3, _temp, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _class4, _class5, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _temp2, _dec10, _dec11, _dec12, _dec13, _dec14, _class7, _class8, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _temp3, _dec15, _dec16, _class10, _class11, _descriptor12, _descriptor13, _descriptor14, _temp4;

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  var _up = new _index.Vec3(0, 1, 0);

  var _v3 = new _index.Vec3();

  var _qt = new _index.Quat();
  /**
   * @en Environment lighting information in the Scene
   * @zh 场景的环境光照相关信息
   */


  var AmbientInfo = (_dec = (0, _classDecorator.ccclass)('cc.AmbientInfo'), _dec2 = (0, _classDecorator.property)({
    type: _index.Color
  }), _dec3 = (0, _classDecorator.property)({
    type: _index.Color
  }), _dec(_class = (_class2 = (_temp = /*#__PURE__*/function () {
    function AmbientInfo() {
      _classCallCheck(this, AmbientInfo);

      _initializerDefineProperty(this, "_skyColor", _descriptor, this);

      _initializerDefineProperty(this, "_skyIllum", _descriptor2, this);

      _initializerDefineProperty(this, "_groundAlbedo", _descriptor3, this);

      this._resource = null;
    }

    _createClass(AmbientInfo, [{
      key: "skyColor",

      /**
       * @en Sky color
       * @zh 天空颜色
       */
      set: function set(val) {
        this._skyColor.set(val);

        if (this._resource) {
          _index.Color.toArray(this._resource.skyColor, this.skyColor);
        }
      },
      get: function get() {
        return this._skyColor;
      }
      /**
       * @en Sky illuminance
       * @zh 天空亮度
       */

    }, {
      key: "skyIllum",
      set: function set(val) {
        this._skyIllum = val;

        if (this._resource) {
          this._resource.skyIllum = this.skyIllum;
        }
      },
      get: function get() {
        return this._skyIllum;
      }
      /**
       * @en Ground color
       * @zh 地面颜色
       */

    }, {
      key: "groundAlbedo",
      set: function set(val) {
        this._groundAlbedo.set(val); // only RGB channels are used, alpha channel are intensionally left unchanged here


        if (this._resource) {
          _index.Vec3.toArray(this._resource.groundAlbedo, this.groundAlbedo);
        }
      },
      get: function get() {
        return this._groundAlbedo;
      }
    }, {
      key: "renderScene",
      set: function set(rs) {
        this._resource = rs.ambient;
        this.skyColor = this._skyColor;
        this.skyIllum = this._skyIllum;
        this.groundAlbedo = this._groundAlbedo;
      }
    }]);

    return AmbientInfo;
  }(), _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "_skyColor", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return new _index.Color(51, 128, 204, 1.0);
    }
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "_skyIllum", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return _ambient.Ambient.SKY_ILLUM;
    }
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "_groundAlbedo", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return new _index.Color(51, 51, 51, 255);
    }
  }), _applyDecoratedDescriptor(_class2.prototype, "skyColor", [_dec2], Object.getOwnPropertyDescriptor(_class2.prototype, "skyColor"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "skyIllum", [_classDecorator.float], Object.getOwnPropertyDescriptor(_class2.prototype, "skyIllum"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "groundAlbedo", [_dec3], Object.getOwnPropertyDescriptor(_class2.prototype, "groundAlbedo"), _class2.prototype)), _class2)) || _class);
  _exports.AmbientInfo = AmbientInfo;
  cc.AmbientInfo = AmbientInfo;
  /**
   * @en Skybox related information
   * @zh 天空盒相关信息
   */

  var SkyboxInfo = (_dec4 = (0, _classDecorator.ccclass)('cc.SkyboxInfo'), _dec5 = (0, _classDecorator.property)(_textureCube.TextureCube), _dec6 = (0, _classDecorator.property)({
    type: _attribute.CCBoolean
  }), _dec7 = (0, _classDecorator.property)({
    type: _attribute.CCBoolean
  }), _dec8 = (0, _classDecorator.property)({
    type: _textureCube.TextureCube
  }), _dec9 = (0, _classDecorator.property)({
    type: _attribute.CCBoolean
  }), _dec4(_class4 = (_class5 = (_temp2 = /*#__PURE__*/function () {
    function SkyboxInfo() {
      _classCallCheck(this, SkyboxInfo);

      _initializerDefineProperty(this, "_envmap", _descriptor4, this);

      _initializerDefineProperty(this, "_isRGBE", _descriptor5, this);

      _initializerDefineProperty(this, "_enabled", _descriptor6, this);

      _initializerDefineProperty(this, "_useIBL", _descriptor7, this);

      this._resource = null;
    }

    _createClass(SkyboxInfo, [{
      key: "enabled",

      /**
       * @en Whether activate skybox in the scene
       * @zh 是否启用天空盒？
       */
      set: function set(val) {
        this._enabled = val;

        if (this._resource) {
          this._resource.enabled = this._enabled;
        }
      },
      get: function get() {
        return this._enabled;
      }
      /**
       * @en Whether use environment lighting
       * @zh 是否启用环境光照？
       */

    }, {
      key: "useIBL",
      set: function set(val) {
        this._useIBL = val;

        if (this._resource) {
          this._resource.useIBL = this._useIBL;
        }
      },
      get: function get() {
        return this._useIBL;
      }
      /**
       * @en The texture cube used for the skybox
       * @zh 使用的立方体贴图
       */

    }, {
      key: "envmap",
      set: function set(val) {
        this._envmap = val;

        if (this._resource) {
          this._resource.envmap = this._envmap;
        }
      },
      get: function get() {
        return this._envmap;
      }
      /**
       * @en Whether enable RGBE data support in skybox shader
       * @zh 是否需要开启 shader 内的 RGBE 数据支持？
       */

    }, {
      key: "isRGBE",
      set: function set(val) {
        this._isRGBE = val;

        if (this._resource) {
          this._resource.isRGBE = this._isRGBE;
        }
      },
      get: function get() {
        return this._isRGBE;
      }
    }, {
      key: "renderScene",
      set: function set(val) {
        this._resource = val.skybox;
        this.isRGBE = this._isRGBE;
        this.envmap = this._envmap;
        this.enabled = this._enabled;
        this.useIBL = this._useIBL;
      }
    }]);

    return SkyboxInfo;
  }(), _temp2), (_descriptor4 = _applyDecoratedDescriptor(_class5.prototype, "_envmap", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return null;
    }
  }), _descriptor5 = _applyDecoratedDescriptor(_class5.prototype, "_isRGBE", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return false;
    }
  }), _descriptor6 = _applyDecoratedDescriptor(_class5.prototype, "_enabled", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return false;
    }
  }), _descriptor7 = _applyDecoratedDescriptor(_class5.prototype, "_useIBL", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return false;
    }
  }), _applyDecoratedDescriptor(_class5.prototype, "enabled", [_dec6], Object.getOwnPropertyDescriptor(_class5.prototype, "enabled"), _class5.prototype), _applyDecoratedDescriptor(_class5.prototype, "useIBL", [_dec7], Object.getOwnPropertyDescriptor(_class5.prototype, "useIBL"), _class5.prototype), _applyDecoratedDescriptor(_class5.prototype, "envmap", [_dec8], Object.getOwnPropertyDescriptor(_class5.prototype, "envmap"), _class5.prototype), _applyDecoratedDescriptor(_class5.prototype, "isRGBE", [_dec9], Object.getOwnPropertyDescriptor(_class5.prototype, "isRGBE"), _class5.prototype)), _class5)) || _class4);
  _exports.SkyboxInfo = SkyboxInfo;
  cc.SkyboxInfo = SkyboxInfo;
  /**
   * @en Scene level planar shadow related information
   * @zh 平面阴影相关信息
   */

  var PlanarShadowInfo = (_dec10 = (0, _classDecorator.ccclass)('cc.PlanarShadowInfo'), _dec11 = (0, _classDecorator.property)({
    type: _attribute.CCBoolean
  }), _dec12 = (0, _classDecorator.property)({
    type: _index.Vec3
  }), _dec13 = (0, _classDecorator.property)({
    type: _attribute.CCFloat
  }), _dec14 = (0, _classDecorator.property)({
    type: _index.Color
  }), _dec10(_class7 = (_class8 = (_temp3 = /*#__PURE__*/function () {
    function PlanarShadowInfo() {
      _classCallCheck(this, PlanarShadowInfo);

      _initializerDefineProperty(this, "_enabled", _descriptor8, this);

      _initializerDefineProperty(this, "_normal", _descriptor9, this);

      _initializerDefineProperty(this, "_distance", _descriptor10, this);

      _initializerDefineProperty(this, "_shadowColor", _descriptor11, this);

      this._resource = null;
    }

    _createClass(PlanarShadowInfo, [{
      key: "setPlaneFromNode",

      /**
       * @en Set plane which receives shadow with the given node's world transformation
       * @zh 根据指定节点的世界变换设置阴影接收平面的信息
       * @param node The node for setting up the plane
       */
      value: function setPlaneFromNode(node) {
        node.getWorldRotation(_qt);
        this.normal = _index.Vec3.transformQuat(_v3, _up, _qt);
        node.getWorldPosition(_v3);
        this.distance = _index.Vec3.dot(this._normal, _v3);
      }
    }, {
      key: "enabled",

      /**
       * @en Whether activate planar shadow
       * @zh 是否启用平面阴影？
       */
      set: function set(val) {
        this._enabled = val;

        if (this._resource) {
          this._resource.enabled = val;
        }
      },
      get: function get() {
        return this._enabled;
      }
      /**
       * @en The normal of the plane which receives shadow
       * @zh 阴影接收平面的法线
       */

    }, {
      key: "normal",
      set: function set(val) {
        _index.Vec3.copy(this._normal, val);

        if (this._resource) {
          this._resource.normal = val;
        }
      },
      get: function get() {
        return this._normal;
      }
      /**
       * @en The distance from coordinate origin to the receiving plane.
       * @zh 阴影接收平面与原点的距离
       */

    }, {
      key: "distance",
      set: function set(val) {
        this._distance = val;

        if (this._resource) {
          this._resource.distance = val;
        }
      },
      get: function get() {
        return this._distance;
      }
      /**
       * @en Shadow color
       * @zh 阴影颜色
       */

    }, {
      key: "shadowColor",
      set: function set(val) {
        this._shadowColor.set(val);

        if (this._resource) {
          this._resource.shadowColor = val;
        }
      },
      get: function get() {
        return this._shadowColor;
      }
    }, {
      key: "renderScene",
      set: function set(val) {
        this._resource = val.planarShadows;
        this.normal = this._normal;
        this.distance = this._distance;
        this.shadowColor = this._shadowColor;
        this.enabled = this._enabled;
      }
    }]);

    return PlanarShadowInfo;
  }(), _temp3), (_descriptor8 = _applyDecoratedDescriptor(_class8.prototype, "_enabled", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return false;
    }
  }), _descriptor9 = _applyDecoratedDescriptor(_class8.prototype, "_normal", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return new _index.Vec3(0, 1, 0);
    }
  }), _descriptor10 = _applyDecoratedDescriptor(_class8.prototype, "_distance", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return 0;
    }
  }), _descriptor11 = _applyDecoratedDescriptor(_class8.prototype, "_shadowColor", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return new _index.Color(0, 0, 0, 76);
    }
  }), _applyDecoratedDescriptor(_class8.prototype, "enabled", [_dec11], Object.getOwnPropertyDescriptor(_class8.prototype, "enabled"), _class8.prototype), _applyDecoratedDescriptor(_class8.prototype, "normal", [_dec12], Object.getOwnPropertyDescriptor(_class8.prototype, "normal"), _class8.prototype), _applyDecoratedDescriptor(_class8.prototype, "distance", [_dec13], Object.getOwnPropertyDescriptor(_class8.prototype, "distance"), _class8.prototype), _applyDecoratedDescriptor(_class8.prototype, "shadowColor", [_dec14], Object.getOwnPropertyDescriptor(_class8.prototype, "shadowColor"), _class8.prototype)), _class8)) || _class7);
  _exports.PlanarShadowInfo = PlanarShadowInfo;
  cc.PlanarShadowInfo = PlanarShadowInfo;
  /**
   * @en All scene related global parameters, it affects all content in the corresponding scene
   * @zh 各类场景级别的渲染参数，将影响全场景的所有物体
   */

  var SceneGlobals = (_dec15 = (0, _classDecorator.ccclass)('cc.SceneGlobals'), _dec16 = (0, _classDecorator.property)({
    type: SkyboxInfo
  }), _dec15(_class10 = (_class11 = (_temp4 = /*#__PURE__*/function () {
    function SceneGlobals() {
      _classCallCheck(this, SceneGlobals);

      _initializerDefineProperty(this, "ambient", _descriptor12, this);

      _initializerDefineProperty(this, "planarShadows", _descriptor13, this);

      _initializerDefineProperty(this, "_skybox", _descriptor14, this);
    }

    _createClass(SceneGlobals, [{
      key: "skybox",

      /**
       * @en Skybox related information
       * @zh 天空盒相关信息
       */
      get: function get() {
        return this._skybox;
      },
      set: function set(value) {
        this._skybox = value;
      }
    }, {
      key: "renderScene",
      set: function set(rs) {
        this.ambient.renderScene = rs;
        this.skybox.renderScene = rs;
        this.planarShadows.renderScene = rs;
      }
    }]);

    return SceneGlobals;
  }(), _temp4), (_descriptor12 = _applyDecoratedDescriptor(_class11.prototype, "ambient", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return new AmbientInfo();
    }
  }), _descriptor13 = _applyDecoratedDescriptor(_class11.prototype, "planarShadows", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return new PlanarShadowInfo();
    }
  }), _descriptor14 = _applyDecoratedDescriptor(_class11.prototype, "_skybox", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return new SkyboxInfo();
    }
  }), _applyDecoratedDescriptor(_class11.prototype, "skybox", [_dec16], Object.getOwnPropertyDescriptor(_class11.prototype, "skybox"), _class11.prototype)), _class11)) || _class10);
  _exports.SceneGlobals = SceneGlobals;
  cc.SceneGlobals = SceneGlobals;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkY6L2plbmtpbnMvd29ya3NwYWNlL0NyZWF0b3JfM0QvZWRpdG9yLTNkL3Jlc291cmNlcy8zZC9lbmdpbmUvY29jb3MvY29yZS9zY2VuZS1ncmFwaC9zY2VuZS1nbG9iYWxzLnRzIl0sIm5hbWVzIjpbIl91cCIsIlZlYzMiLCJfdjMiLCJfcXQiLCJRdWF0IiwiQW1iaWVudEluZm8iLCJ0eXBlIiwiQ29sb3IiLCJfcmVzb3VyY2UiLCJ2YWwiLCJfc2t5Q29sb3IiLCJzZXQiLCJ0b0FycmF5Iiwic2t5Q29sb3IiLCJfc2t5SWxsdW0iLCJza3lJbGx1bSIsIl9ncm91bmRBbGJlZG8iLCJncm91bmRBbGJlZG8iLCJycyIsImFtYmllbnQiLCJwcm9wZXJ0eSIsIkFtYmllbnQiLCJTS1lfSUxMVU0iLCJmbG9hdCIsImNjIiwiU2t5Ym94SW5mbyIsIlRleHR1cmVDdWJlIiwiQ0NCb29sZWFuIiwiX2VuYWJsZWQiLCJlbmFibGVkIiwiX3VzZUlCTCIsInVzZUlCTCIsIl9lbnZtYXAiLCJlbnZtYXAiLCJfaXNSR0JFIiwiaXNSR0JFIiwic2t5Ym94IiwiUGxhbmFyU2hhZG93SW5mbyIsIkNDRmxvYXQiLCJub2RlIiwiZ2V0V29ybGRSb3RhdGlvbiIsIm5vcm1hbCIsInRyYW5zZm9ybVF1YXQiLCJnZXRXb3JsZFBvc2l0aW9uIiwiZGlzdGFuY2UiLCJkb3QiLCJfbm9ybWFsIiwiY29weSIsIl9kaXN0YW5jZSIsIl9zaGFkb3dDb2xvciIsInNoYWRvd0NvbG9yIiwicGxhbmFyU2hhZG93cyIsIlNjZW5lR2xvYmFscyIsIl9za3lib3giLCJ2YWx1ZSIsInJlbmRlclNjZW5lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBdUNBLE1BQU1BLEdBQUcsR0FBRyxJQUFJQyxXQUFKLENBQVMsQ0FBVCxFQUFZLENBQVosRUFBZSxDQUFmLENBQVo7O0FBQ0EsTUFBTUMsR0FBRyxHQUFHLElBQUlELFdBQUosRUFBWjs7QUFDQSxNQUFNRSxH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V0FBWixHQUEwQnJDLEVBQTFCO0FBQ0EsYUFBS2lDLGFBQUwsQ0FBbUJJLFdBQW5CLEdBQWlDckMsRUFBakM7QUFDSDs7OzsyRkEzQkFFLHdCOzs7OzthQUNnQixJQUFJZixXQUFKLEU7O3NGQUtoQmUsd0I7Ozs7O2FBQ3NCLElBQUlpQixnQkFBSixFOztnRkFDdEJqQix3Qjs7Ozs7YUFDaUIsSUFBSUssVUFBSixFOzs7O0FBb0J0QkQsRUFBQUEsRUFBRSxDQUFDNEIsWUFBSCxHQUFrQkEsWUFBbEIiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gQ29weXJpZ2h0IChjKSAyMDE3LTIwMTggWGlhbWVuIFlhamkgU29mdHdhcmUgQ28uLCBMdGQuXHJcblxyXG4gaHR0cDovL3d3dy5jb2Nvcy5jb21cclxuXHJcbiBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XHJcbiBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGVuZ2luZSBzb3VyY2UgY29kZSAodGhlIFwiU29mdHdhcmVcIiksIGEgbGltaXRlZCxcclxuICB3b3JsZHdpZGUsIHJveWFsdHktZnJlZSwgbm9uLWFzc2lnbmFibGUsIHJldm9jYWJsZSBhbmQgbm9uLWV4Y2x1c2l2ZSBsaWNlbnNlXHJcbiB0byB1c2UgQ29jb3MgQ3JlYXRvciBzb2xlbHkgdG8gZGV2ZWxvcCBnYW1lcyBvbiB5b3VyIHRhcmdldCBwbGF0Zm9ybXMuIFlvdSBzaGFsbFxyXG4gIG5vdCB1c2UgQ29jb3MgQ3JlYXRvciBzb2Z0d2FyZSBmb3IgZGV2ZWxvcGluZyBvdGhlciBzb2Z0d2FyZSBvciB0b29scyB0aGF0J3NcclxuICB1c2VkIGZvciBkZXZlbG9waW5nIGdhbWVzLiBZb3UgYXJlIG5vdCBncmFudGVkIHRvIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsXHJcbiAgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIENvY29zIENyZWF0b3IuXHJcblxyXG4gVGhlIHNvZnR3YXJlIG9yIHRvb2xzIGluIHRoaXMgTGljZW5zZSBBZ3JlZW1lbnQgYXJlIGxpY2Vuc2VkLCBub3Qgc29sZC5cclxuIFhpYW1lbiBZYWppIFNvZnR3YXJlIENvLiwgTHRkLiByZXNlcnZlcyBhbGwgcmlnaHRzIG5vdCBleHByZXNzbHkgZ3JhbnRlZCB0byB5b3UuXHJcblxyXG4gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxyXG4gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXHJcbiBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcclxuIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcclxuIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXHJcbiBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXHJcbiBUSEUgU09GVFdBUkUuXHJcbiovXHJcblxyXG4vKipcclxuICogQGNhdGVnb3J5IHNjZW5lLWdyYXBoXHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgVGV4dHVyZUN1YmUgfSBmcm9tICcuLi9hc3NldHMvdGV4dHVyZS1jdWJlJztcclxuaW1wb3J0IHsgY2NjbGFzcywgZmxvYXQsIHByb3BlcnR5IH0gZnJvbSAnLi4vZGF0YS9jbGFzcy1kZWNvcmF0b3InO1xyXG5pbXBvcnQgeyBDQ0Jvb2xlYW4sIENDRmxvYXQgfSBmcm9tICcuLi9kYXRhL3V0aWxzL2F0dHJpYnV0ZSc7XHJcbmltcG9ydCB7IENvbG9yLCBRdWF0LCBWZWMzIH0gZnJvbSAnLi4vbWF0aCc7XHJcbmltcG9ydCB7IEFtYmllbnQgfSBmcm9tICcuLi9yZW5kZXJlci9zY2VuZS9hbWJpZW50JztcclxuaW1wb3J0IHsgUGxhbmFyU2hhZG93cyB9IGZyb20gJy4uL3JlbmRlcmVyL3NjZW5lL3BsYW5hci1zaGFkb3dzJztcclxuaW1wb3J0IHsgUmVuZGVyU2NlbmUgfSBmcm9tICcuLi9yZW5kZXJlci9zY2VuZS9yZW5kZXItc2NlbmUnO1xyXG5pbXBvcnQgeyBTa3lib3ggfSBmcm9tICcuLi9yZW5kZXJlci9zY2VuZS9za3lib3gnO1xyXG5pbXBvcnQgeyBOb2RlIH0gZnJvbSAnLi9ub2RlJztcclxuXHJcbmNvbnN0IF91cCA9IG5ldyBWZWMzKDAsIDEsIDApO1xyXG5jb25zdCBfdjMgPSBuZXcgVmVjMygpO1xyXG5jb25zdCBfcXQgPSBuZXcgUXVhdCgpO1xyXG5cclxuLyoqXHJcbiAqIEBlbiBFbnZpcm9ubWVudCBsaWdodGluZyBpbmZvcm1hdGlvbiBpbiB0aGUgU2NlbmVcclxuICogQHpoIOWcuuaZr+eahOeOr+Wig+WFieeFp+ebuOWFs+S/oeaBr1xyXG4gKi9cclxuQGNjY2xhc3MoJ2NjLkFtYmllbnRJbmZvJylcclxuZXhwb3J0IGNsYXNzIEFtYmllbnRJbmZvIHtcclxuICAgIEBwcm9wZXJ0eVxyXG4gICAgcHJvdGVjdGVkIF9za3lDb2xvciA9IG5ldyBDb2xvcig1MSwgMTI4LCAyMDQsIDEuMCk7XHJcbiAgICBAcHJvcGVydHlcclxuICAgIHByb3RlY3RlZCBfc2t5SWxsdW0gPSBBbWJpZW50LlNLWV9JTExVTTtcclxuICAgIEBwcm9wZXJ0eVxyXG4gICAgcHJvdGVjdGVkIF9ncm91bmRBbGJlZG8gPSBuZXcgQ29sb3IoNTEsIDUxLCA1MSwgMjU1KTtcclxuXHJcbiAgICBwcm90ZWN0ZWQgX3Jlc291cmNlOiBBbWJpZW50IHwgbnVsbCA9IG51bGw7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAZW4gU2t5IGNvbG9yXHJcbiAgICAgKiBAemgg5aSp56m66aKc6ImyXHJcbiAgICAgKi9cclxuICAgIEBwcm9wZXJ0eSh7IHR5cGU6IENvbG9yIH0pXHJcbiAgICBzZXQgc2t5Q29sb3IgKHZhbDogQ29sb3IpIHtcclxuICAgICAgICB0aGlzLl9za3lDb2xvci5zZXQodmFsKTtcclxuICAgICAgICBpZiAodGhpcy5fcmVzb3VyY2UpIHsgQ29sb3IudG9BcnJheSh0aGlzLl9yZXNvdXJjZS5za3lDb2xvciwgdGhpcy5za3lDb2xvcik7IH1cclxuICAgIH1cclxuICAgIGdldCBza3lDb2xvciAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NreUNvbG9yO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQGVuIFNreSBpbGx1bWluYW5jZVxyXG4gICAgICogQHpoIOWkqeepuuS6ruW6plxyXG4gICAgICovXHJcbiAgICBAZmxvYXRcclxuICAgIHNldCBza3lJbGx1bSAodmFsOiBudW1iZXIpIHtcclxuICAgICAgICB0aGlzLl9za3lJbGx1bSA9IHZhbDtcclxuICAgICAgICBpZiAodGhpcy5fcmVzb3VyY2UpIHsgdGhpcy5fcmVzb3VyY2Uuc2t5SWxsdW0gPSB0aGlzLnNreUlsbHVtOyB9XHJcbiAgICB9XHJcbiAgICBnZXQgc2t5SWxsdW0gKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9za3lJbGx1bTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEBlbiBHcm91bmQgY29sb3JcclxuICAgICAqIEB6aCDlnLDpnaLpopzoibJcclxuICAgICAqL1xyXG4gICAgQHByb3BlcnR5KHsgdHlwZTogQ29sb3IgfSlcclxuICAgIHNldCBncm91bmRBbGJlZG8gKHZhbDogQ29sb3IpIHtcclxuICAgICAgICB0aGlzLl9ncm91bmRBbGJlZG8uc2V0KHZhbCk7XHJcbiAgICAgICAgLy8gb25seSBSR0IgY2hhbm5lbHMgYXJlIHVzZWQsIGFscGhhIGNoYW5uZWwgYXJlIGludGVuc2lvbmFsbHkgbGVmdCB1bmNoYW5nZWQgaGVyZVxyXG4gICAgICAgIGlmICh0aGlzLl9yZXNvdXJjZSkgeyBWZWMzLnRvQXJyYXkodGhpcy5fcmVzb3VyY2UuZ3JvdW5kQWxiZWRvLCB0aGlzLmdyb3VuZEFsYmVkbyk7IH1cclxuICAgIH1cclxuICAgIGdldCBncm91bmRBbGJlZG8gKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9ncm91bmRBbGJlZG87XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IHJlbmRlclNjZW5lIChyczogUmVuZGVyU2NlbmUpIHtcclxuICAgICAgICB0aGlzLl9yZXNvdXJjZSA9IHJzLmFtYmllbnQ7XHJcbiAgICAgICAgdGhpcy5za3lDb2xvciA9IHRoaXMuX3NreUNvbG9yO1xyXG4gICAgICAgIHRoaXMuc2t5SWxsdW0gPSB0aGlzLl9za3lJbGx1bTtcclxuICAgICAgICB0aGlzLmdyb3VuZEFsYmVkbyA9IHRoaXMuX2dyb3VuZEFsYmVkbztcclxuICAgIH1cclxufVxyXG5jYy5BbWJpZW50SW5mbyA9IEFtYmllbnRJbmZvO1xyXG5cclxuLyoqXHJcbiAqIEBlbiBTa3lib3ggcmVsYXRlZCBpbmZvcm1hdGlvblxyXG4gKiBAemgg5aSp56m655uS55u45YWz5L+h5oGvXHJcbiAqL1xyXG5AY2NjbGFzcygnY2MuU2t5Ym94SW5mbycpXHJcbmV4cG9ydCBjbGFzcyBTa3lib3hJbmZvIHtcclxuICAgIEBwcm9wZXJ0eShUZXh0dXJlQ3ViZSlcclxuICAgIHByb3RlY3RlZCBfZW52bWFwOiBUZXh0dXJlQ3ViZSB8IG51bGwgPSBudWxsO1xyXG4gICAgQHByb3BlcnR5XHJcbiAgICBwcm90ZWN0ZWQgX2lzUkdCRSA9IGZhbHNlO1xyXG4gICAgQHByb3BlcnR5XHJcbiAgICBwcm90ZWN0ZWQgX2VuYWJsZWQgPSBmYWxzZTtcclxuICAgIEBwcm9wZXJ0eVxyXG4gICAgcHJvdGVjdGVkIF91c2VJQkwgPSBmYWxzZTtcclxuXHJcbiAgICBwcm90ZWN0ZWQgX3Jlc291cmNlOiBTa3lib3ggfCBudWxsID0gbnVsbDtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEBlbiBXaGV0aGVyIGFjdGl2YXRlIHNreWJveCBpbiB0aGUgc2NlbmVcclxuICAgICAqIEB6aCDmmK/lkKblkK/nlKjlpKnnqbrnm5LvvJ9cclxuICAgICAqL1xyXG4gICAgQHByb3BlcnR5KHsgdHlwZTogQ0NCb29sZWFuIH0pXHJcbiAgICBzZXQgZW5hYmxlZCAodmFsKSB7XHJcbiAgICAgICAgdGhpcy5fZW5hYmxlZCA9IHZhbDtcclxuICAgICAgICBpZiAodGhpcy5fcmVzb3VyY2UpIHsgdGhpcy5fcmVzb3VyY2UuZW5hYmxlZCA9IHRoaXMuX2VuYWJsZWQ7IH1cclxuICAgIH1cclxuICAgIGdldCBlbmFibGVkICgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZW5hYmxlZDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEBlbiBXaGV0aGVyIHVzZSBlbnZpcm9ubWVudCBsaWdodGluZ1xyXG4gICAgICogQHpoIOaYr+WQpuWQr+eUqOeOr+Wig+WFieeFp++8n1xyXG4gICAgICovXHJcbiAgICBAcHJvcGVydHkoeyB0eXBlOiBDQ0Jvb2xlYW4gfSlcclxuICAgIHNldCB1c2VJQkwgKHZhbCkge1xyXG4gICAgICAgIHRoaXMuX3VzZUlCTCA9IHZhbDtcclxuICAgICAgICBpZiAodGhpcy5fcmVzb3VyY2UpIHsgdGhpcy5fcmVzb3VyY2UudXNlSUJMID0gdGhpcy5fdXNlSUJMOyB9XHJcbiAgICB9XHJcbiAgICBnZXQgdXNlSUJMICgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fdXNlSUJMO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQGVuIFRoZSB0ZXh0dXJlIGN1YmUgdXNlZCBmb3IgdGhlIHNreWJveFxyXG4gICAgICogQHpoIOS9v+eUqOeahOeri+aWueS9k+i0tOWbvlxyXG4gICAgICovXHJcbiAgICBAcHJvcGVydHkoeyB0eXBlOiBUZXh0dXJlQ3ViZSB9KVxyXG4gICAgc2V0IGVudm1hcCAodmFsKSB7XHJcbiAgICAgICAgdGhpcy5fZW52bWFwID0gdmFsO1xyXG4gICAgICAgIGlmICh0aGlzLl9yZXNvdXJjZSkgeyB0aGlzLl9yZXNvdXJjZS5lbnZtYXAgPSB0aGlzLl9lbnZtYXA7IH1cclxuICAgIH1cclxuICAgIGdldCBlbnZtYXAgKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9lbnZtYXA7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAZW4gV2hldGhlciBlbmFibGUgUkdCRSBkYXRhIHN1cHBvcnQgaW4gc2t5Ym94IHNoYWRlclxyXG4gICAgICogQHpoIOaYr+WQpumcgOimgeW8gOWQryBzaGFkZXIg5YaF55qEIFJHQkUg5pWw5o2u5pSv5oyB77yfXHJcbiAgICAgKi9cclxuICAgIEBwcm9wZXJ0eSh7IHR5cGU6IENDQm9vbGVhbiB9KVxyXG4gICAgc2V0IGlzUkdCRSAodmFsKSB7XHJcbiAgICAgICAgdGhpcy5faXNSR0JFID0gdmFsO1xyXG4gICAgICAgIGlmICh0aGlzLl9yZXNvdXJjZSkgeyB0aGlzLl9yZXNvdXJjZS5pc1JHQkUgPSB0aGlzLl9pc1JHQkU7IH1cclxuICAgIH1cclxuICAgIGdldCBpc1JHQkUgKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9pc1JHQkU7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IHJlbmRlclNjZW5lICh2YWw6IFJlbmRlclNjZW5lKSB7XHJcbiAgICAgICAgdGhpcy5fcmVzb3VyY2UgPSB2YWwuc2t5Ym94O1xyXG4gICAgICAgIHRoaXMuaXNSR0JFID0gdGhpcy5faXNSR0JFO1xyXG4gICAgICAgIHRoaXMuZW52bWFwID0gdGhpcy5fZW52bWFwO1xyXG4gICAgICAgIHRoaXMuZW5hYmxlZCA9IHRoaXMuX2VuYWJsZWQ7XHJcbiAgICAgICAgdGhpcy51c2VJQkwgPSB0aGlzLl91c2VJQkw7XHJcbiAgICB9XHJcbn1cclxuY2MuU2t5Ym94SW5mbyA9IFNreWJveEluZm87XHJcblxyXG4vKipcclxuICogQGVuIFNjZW5lIGxldmVsIHBsYW5hciBzaGFkb3cgcmVsYXRlZCBpbmZvcm1hdGlvblxyXG4gKiBAemgg5bmz6Z2i6Zi05b2x55u45YWz5L+h5oGvXHJcbiAqL1xyXG5AY2NjbGFzcygnY2MuUGxhbmFyU2hhZG93SW5mbycpXHJcbmV4cG9ydCBjbGFzcyBQbGFuYXJTaGFkb3dJbmZvIHtcclxuICAgIEBwcm9wZXJ0eVxyXG4gICAgcHJvdGVjdGVkIF9lbmFibGVkID0gZmFsc2U7XHJcbiAgICBAcHJvcGVydHlcclxuICAgIHByb3RlY3RlZCBfbm9ybWFsID0gbmV3IFZlYzMoMCwgMSwgMCk7XHJcbiAgICBAcHJvcGVydHlcclxuICAgIHByb3RlY3RlZCBfZGlzdGFuY2UgPSAwO1xyXG4gICAgQHByb3BlcnR5XHJcbiAgICBwcm90ZWN0ZWQgX3NoYWRvd0NvbG9yID0gbmV3IENvbG9yKDAsIDAsIDAsIDc2KTtcclxuXHJcbiAgICBwcm90ZWN0ZWQgX3Jlc291cmNlOiBQbGFuYXJTaGFkb3dzIHwgbnVsbCA9IG51bGw7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAZW4gV2hldGhlciBhY3RpdmF0ZSBwbGFuYXIgc2hhZG93XHJcbiAgICAgKiBAemgg5piv5ZCm5ZCv55So5bmz6Z2i6Zi05b2x77yfXHJcbiAgICAgKi9cclxuICAgIEBwcm9wZXJ0eSh7IHR5cGU6IENDQm9vbGVhbiB9KVxyXG4gICAgc2V0IGVuYWJsZWQgKHZhbDogYm9vbGVhbikge1xyXG4gICAgICAgIHRoaXMuX2VuYWJsZWQgPSB2YWw7XHJcbiAgICAgICAgaWYgKHRoaXMuX3Jlc291cmNlKSB7IHRoaXMuX3Jlc291cmNlLmVuYWJsZWQgPSB2YWw7IH1cclxuICAgIH1cclxuICAgIGdldCBlbmFibGVkICgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZW5hYmxlZDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEBlbiBUaGUgbm9ybWFsIG9mIHRoZSBwbGFuZSB3aGljaCByZWNlaXZlcyBzaGFkb3dcclxuICAgICAqIEB6aCDpmLTlvbHmjqXmlLblubPpnaLnmoTms5Xnur9cclxuICAgICAqL1xyXG4gICAgQHByb3BlcnR5KHsgdHlwZTogVmVjMyB9KVxyXG4gICAgc2V0IG5vcm1hbCAodmFsOiBWZWMzKSB7XHJcbiAgICAgICAgVmVjMy5jb3B5KHRoaXMuX25vcm1hbCwgdmFsKTtcclxuICAgICAgICBpZiAodGhpcy5fcmVzb3VyY2UpIHsgdGhpcy5fcmVzb3VyY2Uubm9ybWFsID0gdmFsOyB9XHJcbiAgICB9XHJcbiAgICBnZXQgbm9ybWFsICgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbm9ybWFsO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQGVuIFRoZSBkaXN0YW5jZSBmcm9tIGNvb3JkaW5hdGUgb3JpZ2luIHRvIHRoZSByZWNlaXZpbmcgcGxhbmUuXHJcbiAgICAgKiBAemgg6Zi05b2x5o6l5pS25bmz6Z2i5LiO5Y6f54K555qE6Led56a7XHJcbiAgICAgKi9cclxuICAgIEBwcm9wZXJ0eSh7IHR5cGU6IENDRmxvYXQgfSlcclxuICAgIHNldCBkaXN0YW5jZSAodmFsOiBudW1iZXIpIHtcclxuICAgICAgICB0aGlzLl9kaXN0YW5jZSA9IHZhbDtcclxuICAgICAgICBpZiAodGhpcy5fcmVzb3VyY2UpIHsgdGhpcy5fcmVzb3VyY2UuZGlzdGFuY2UgPSB2YWw7IH1cclxuICAgIH1cclxuICAgIGdldCBkaXN0YW5jZSAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Rpc3RhbmNlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQGVuIFNoYWRvdyBjb2xvclxyXG4gICAgICogQHpoIOmYtOW9seminOiJslxyXG4gICAgICovXHJcbiAgICBAcHJvcGVydHkoeyB0eXBlOiBDb2xvciB9KVxyXG4gICAgc2V0IHNoYWRvd0NvbG9yICh2YWw6IENvbG9yKSB7XHJcbiAgICAgICAgdGhpcy5fc2hhZG93Q29sb3Iuc2V0KHZhbCk7XHJcbiAgICAgICAgaWYgKHRoaXMuX3Jlc291cmNlKSB7IHRoaXMuX3Jlc291cmNlLnNoYWRvd0NvbG9yID0gdmFsOyB9XHJcbiAgICB9XHJcbiAgICBnZXQgc2hhZG93Q29sb3IgKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9zaGFkb3dDb2xvcjtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEBlbiBTZXQgcGxhbmUgd2hpY2ggcmVjZWl2ZXMgc2hhZG93IHdpdGggdGhlIGdpdmVuIG5vZGUncyB3b3JsZCB0cmFuc2Zvcm1hdGlvblxyXG4gICAgICogQHpoIOagueaNruaMh+WumuiKgueCueeahOS4lueVjOWPmOaNouiuvue9rumYtOW9seaOpeaUtuW5s+mdoueahOS/oeaBr1xyXG4gICAgICogQHBhcmFtIG5vZGUgVGhlIG5vZGUgZm9yIHNldHRpbmcgdXAgdGhlIHBsYW5lXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzZXRQbGFuZUZyb21Ob2RlIChub2RlOiBOb2RlKSB7XHJcbiAgICAgICAgbm9kZS5nZXRXb3JsZFJvdGF0aW9uKF9xdCk7XHJcbiAgICAgICAgdGhpcy5ub3JtYWwgPSBWZWMzLnRyYW5zZm9ybVF1YXQoX3YzLCBfdXAsIF9xdCk7XHJcbiAgICAgICAgbm9kZS5nZXRXb3JsZFBvc2l0aW9uKF92Myk7XHJcbiAgICAgICAgdGhpcy5kaXN0YW5jZSA9IFZlYzMuZG90KHRoaXMuX25vcm1hbCwgX3YzKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXQgcmVuZGVyU2NlbmUgKHZhbDogUmVuZGVyU2NlbmUpIHtcclxuICAgICAgICB0aGlzLl9yZXNvdXJjZSA9IHZhbC5wbGFuYXJTaGFkb3dzO1xyXG4gICAgICAgIHRoaXMubm9ybWFsID0gdGhpcy5fbm9ybWFsO1xyXG4gICAgICAgIHRoaXMuZGlzdGFuY2UgPSB0aGlzLl9kaXN0YW5jZTtcclxuICAgICAgICB0aGlzLnNoYWRvd0NvbG9yID0gdGhpcy5fc2hhZG93Q29sb3I7XHJcbiAgICAgICAgdGhpcy5lbmFibGVkID0gdGhpcy5fZW5hYmxlZDtcclxuICAgIH1cclxufVxyXG5jYy5QbGFuYXJTaGFkb3dJbmZvID0gUGxhbmFyU2hhZG93SW5mbztcclxuXHJcbi8qKlxyXG4gKiBAZW4gQWxsIHNjZW5lIHJlbGF0ZWQgZ2xvYmFsIHBhcmFtZXRlcnMsIGl0IGFmZmVjdHMgYWxsIGNvbnRlbnQgaW4gdGhlIGNvcnJlc3BvbmRpbmcgc2NlbmVcclxuICogQHpoIOWQhOexu+WcuuaZr+e6p+WIq+eahOa4suafk+WPguaVsO+8jOWwhuW9seWTjeWFqOWcuuaZr+eahOaJgOacieeJqeS9k1xyXG4gKi9cclxuQGNjY2xhc3MoJ2NjLlNjZW5lR2xvYmFscycpXHJcbmV4cG9ydCBjbGFzcyBTY2VuZUdsb2JhbHMge1xyXG4gICAgLyoqXHJcbiAgICAgKiBAZW4gVGhlIGVudmlyb25tZW50IGxpZ2h0IGluZm9ybWF0aW9uXHJcbiAgICAgKiBAemgg5Zy65pmv55qE546v5aKD5YWJ54Wn55u45YWz5L+h5oGvXHJcbiAgICAgKi9cclxuICAgIEBwcm9wZXJ0eVxyXG4gICAgcHVibGljIGFtYmllbnQgPSBuZXcgQW1iaWVudEluZm8oKTtcclxuICAgIC8qKlxyXG4gICAgICogQGVuIFNjZW5lIGxldmVsIHBsYW5hciBzaGFkb3cgcmVsYXRlZCBpbmZvcm1hdGlvblxyXG4gICAgICogQHpoIOW5s+mdoumYtOW9seebuOWFs+S/oeaBr1xyXG4gICAgICovXHJcbiAgICBAcHJvcGVydHlcclxuICAgIHB1YmxpYyBwbGFuYXJTaGFkb3dzID0gbmV3IFBsYW5hclNoYWRvd0luZm8oKTtcclxuICAgIEBwcm9wZXJ0eVxyXG4gICAgcHJpdmF0ZSBfc2t5Ym94ID0gbmV3IFNreWJveEluZm8oKTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEBlbiBTa3lib3ggcmVsYXRlZCBpbmZvcm1hdGlvblxyXG4gICAgICogQHpoIOWkqeepuuebkuebuOWFs+S/oeaBr1xyXG4gICAgICovXHJcbiAgICBAcHJvcGVydHkoeyB0eXBlOiBTa3lib3hJbmZvIH0pXHJcbiAgICBnZXQgc2t5Ym94ICgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fc2t5Ym94O1xyXG4gICAgfVxyXG4gICAgc2V0IHNreWJveCAodmFsdWUpIHtcclxuICAgICAgICB0aGlzLl9za3lib3ggPSB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICBzZXQgcmVuZGVyU2NlbmUgKHJzOiBSZW5kZXJTY2VuZSkge1xyXG4gICAgICAgIHRoaXMuYW1iaWVudC5yZW5kZXJTY2VuZSA9IHJzO1xyXG4gICAgICAgIHRoaXMuc2t5Ym94LnJlbmRlclNjZW5lID0gcnM7XHJcbiAgICAgICAgdGhpcy5wbGFuYXJTaGFkb3dzLnJlbmRlclNjZW5lID0gcnM7XHJcbiAgICB9XHJcbn1cclxuY2MuU2NlbmVHbG9iYWxzID0gU2NlbmVHbG9iYWxzO1xyXG4iXX0=