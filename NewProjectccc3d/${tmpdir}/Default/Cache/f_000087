(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "../../core/assets/index.js", "../../core/data/class-decorator.js", "../enum.js", "./particle-system-renderer-cpu.js", "./particle-system-renderer-gpu.js", "../../core/director.js", "../../core/gfx/device.js"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("../../core/assets/index.js"), require("../../core/data/class-decorator.js"), require("../enum.js"), require("./particle-system-renderer-cpu.js"), require("./particle-system-renderer-gpu.js"), require("../../core/director.js"), require("../../core/gfx/device.js"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.index, global.classDecorator, global._enum, global.particleSystemRendererCpu, global.particleSystemRendererGpu, global.director, global.device);
    global.particleSystemRendererData = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _index, _classDecorator, _enum, _particleSystemRendererCpu, _particleSystemRendererGpu, _director, _device) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _particleSystemRendererCpu = _interopRequireDefault(_particleSystemRendererCpu);
  _particleSystemRendererGpu = _interopRequireDefault(_particleSystemRendererGpu);

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _temp;

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function isSupportGPUParticle() {
    var device = _director.director.root.device;

    if (device.maxVertexTextureUnits >= 8 && device.hasFeature(_device.GFXFeature.TEXTURE_FLOAT)) {
      return true;
    }

    cc.warn("Maybe the device has restrictions on vertex textures or does not support float textures.");
    return false;
  }

  var ParticleSystemRenderer = (_dec = (0, _classDecorator.ccclass)('cc.ParticleSystemRenderer'), _dec2 = (0, _classDecorator.property)({
    type: _enum.RenderMode,
    displayOrder: 0,
    tooltip: '设定粒子生成模式'
  }), _dec3 = (0, _classDecorator.property)({
    displayOrder: 1,
    tooltip: '在粒子生成方式为 StrecthedBillboard 时,对粒子在运动方向上按速度大小进行拉伸'
  }), _dec4 = (0, _classDecorator.property)({
    displayOrder: 2,
    tooltip: '在粒子生成方式为 StrecthedBillboard 时,对粒子在运动方向上按粒子大小进行拉伸'
  }), _dec5 = (0, _classDecorator.property)({
    type: _enum.RenderMode,
    displayOrder: 3
  }), _dec6 = (0, _classDecorator.property)({
    displayOrder: 4
  }), _dec7 = (0, _classDecorator.property)({
    displayOrder: 5
  }), _dec8 = (0, _classDecorator.property)({
    displayOrder: 6
  }), _dec9 = (0, _classDecorator.property)({
    type: _index.Mesh,
    displayOrder: 7,
    tooltip: '粒子发射的模型'
  }), _dec10 = (0, _classDecorator.property)({
    type: _index.Material,
    displayOrder: 8,
    tooltip: '粒子使用的材质'
  }), _dec11 = (0, _classDecorator.property)({
    type: _index.Material,
    displayOrder: 9,
    tooltip: '拖尾使用的材质'
  }), _dec12 = (0, _classDecorator.property)({
    displayOrder: 10,
    tooltip: '是否启用GPU粒子'
  }), _dec(_class = (_class2 = (_temp = /*#__PURE__*/function () {
    function ParticleSystemRenderer() {
      _classCallCheck(this, ParticleSystemRenderer);

      _initializerDefineProperty(this, "_renderMode", _descriptor, this);

      _initializerDefineProperty(this, "_velocityScale", _descriptor2, this);

      _initializerDefineProperty(this, "_lengthScale", _descriptor3, this);

      _initializerDefineProperty(this, "_mesh", _descriptor4, this);

      _initializerDefineProperty(this, "_mainTexture", _descriptor5, this);

      _initializerDefineProperty(this, "_useGPU", _descriptor6, this);

      this._particleSystem = null;
    }

    _createClass(ParticleSystemRenderer, [{
      key: "onInit",
      value: function onInit(ps) {
        this._particleSystem = ps;
        var useGPU = this._useGPU && isSupportGPUParticle();
        this._particleSystem.processor = useGPU ? new _particleSystemRendererGpu.default(this) : new _particleSystemRendererCpu.default(this);

        this._particleSystem.processor.onInit(ps);
      }
    }, {
      key: "_switchProcessor",
      value: function _switchProcessor() {
        if (this._particleSystem.processor) {
          this._particleSystem.processor.detachFromScene();

          this._particleSystem.processor.clear();

          this._particleSystem.processor = null;
        }

        this._particleSystem.processor = this._useGPU ? new _particleSystemRendererGpu.default(this) : new _particleSystemRendererCpu.default(this);

        this._particleSystem.processor.onInit(this._particleSystem);

        this._particleSystem.processor.onEnable();

        this._particleSystem.bindModule();
      }
    }, {
      key: "renderMode",

      /**
       * @zh 设定粒子生成模式。
       */
      get: function get() {
        return this._renderMode;
      },
      set: function set(val) {
        if (this._renderMode === val) {
          return;
        }

        this._renderMode = val;

        this._particleSystem.processor.updateRenderMode();
      }
      /**
       * @zh 在粒子生成方式为 StrecthedBillboard 时,对粒子在运动方向上按速度大小进行拉伸。
       */

    }, {
      key: "velocityScale",
      get: function get() {
        return this._velocityScale;
      },
      set: function set(val) {
        this._velocityScale = val;

        this._particleSystem.processor.updateMaterialParams(); // this._updateModel();

      }
      /**
       * @zh 在粒子生成方式为 StrecthedBillboard 时,对粒子在运动方向上按粒子大小进行拉伸。
       */

    }, {
      key: "lengthScale",
      get: function get() {
        return this._lengthScale;
      },
      set: function set(val) {
        this._lengthScale = val;

        this._particleSystem.processor.updateMaterialParams(); // this._updateModel();

      }
    }, {
      key: "mesh",

      /**
       * @zh 粒子发射的模型。
       */
      get: function get() {
        return this._mesh;
      },
      set: function set(val) {
        this._mesh = val;

        this._particleSystem.processor.setVertexAttributes();
      }
      /**
       * @zh 粒子使用的材质。
       */

    }, {
      key: "particleMaterial",
      get: function get() {
        if (!this._particleSystem) {
          return null;
        }

        return this._particleSystem.getMaterial(0);
      },
      set: function set(val) {
        this._particleSystem.setMaterial(val, 0);
      }
      /**
       * @zh 拖尾使用的材质。
       */

    }, {
      key: "trailMaterial",
      get: function get() {
        if (!this._particleSystem) {
          return null;
        }

        return this._particleSystem.getMaterial(1);
      },
      set: function set(val) {
        this._particleSystem.setMaterial(val, 1);
      }
    }, {
      key: "mainTexture",
      get: function get() {
        return this._mainTexture;
      },
      set: function set(val) {
        this._mainTexture = val;
      }
    }, {
      key: "useGPU",
      get: function get() {
        return this._useGPU;
      },
      set: function set(val) {
        if (this._useGPU === val) {
          return;
        }

        if (!isSupportGPUParticle()) {
          this._useGPU = false;
        } else {
          this._useGPU = val;
        }

        this._switchProcessor();
      }
    }]);

    return ParticleSystemRenderer;
  }(), _temp), (_applyDecoratedDescriptor(_class2.prototype, "renderMode", [_dec2], Object.getOwnPropertyDescriptor(_class2.prototype, "renderMode"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "velocityScale", [_dec3], Object.getOwnPropertyDescriptor(_class2.prototype, "velocityScale"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "lengthScale", [_dec4], Object.getOwnPropertyDescriptor(_class2.prototype, "lengthScale"), _class2.prototype), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "_renderMode", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return _enum.RenderMode.Billboard;
    }
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "_velocityScale", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return 1;
    }
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "_lengthScale", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return 1;
    }
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "_mesh", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return null;
    }
  }), _applyDecoratedDescriptor(_class2.prototype, "mesh", [_dec9], Object.getOwnPropertyDescriptor(_class2.prototype, "mesh"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "particleMaterial", [_dec10], Object.getOwnPropertyDescriptor(_class2.prototype, "particleMaterial"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "trailMaterial", [_dec11], Object.getOwnPropertyDescriptor(_class2.prototype, "trailMaterial"), _class2.prototype), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "_mainTexture", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return null;
    }
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "_useGPU", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return false;
    }
  }), _applyDecoratedDescriptor(_class2.prototype, "useGPU", [_dec12], Object.getOwnPropertyDescriptor(_class2.prototype, "useGPU"), _class2.prototype)), _class2)) || _class);
  _exports.default = ParticleSystemRenderer;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,