(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "../../../core/components/component-event-handler.js", "../../../core/data/class-decorator.js", "../../../core/components/ui-base/ui-component.js", "./webview-impl.js", "../../../core/default-constants.js"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("../../../core/components/component-event-handler.js"), require("../../../core/data/class-decorator.js"), require("../../../core/components/ui-base/ui-component.js"), require("./webview-impl.js"), require("../../../core/default-constants.js"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.componentEventHandler, global.classDecorator, global.uiComponent, global.webviewImpl, global.defaultConstants);
    global.webViewComponent = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _componentEventHandler, _classDecorator, _uiComponent, _webviewImpl, _defaultConstants) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.WebviewComponent = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _class3, _temp;

  function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  /**
   * @en WebView event type
   * @zh 网页视图事件类型。
   * @enum WebView.EventType
   */
  var EventType = _webviewImpl.WebViewEventType;
  /**
   * @en Web page Load completed.
   * @zh  网页加载完成。
   * @property {String} LOADED
   */

  /**
   * @en Web page is loading.
   * @zh  网页加载中。
   * @property {String} LOADING
   */

  /**
   * @en Web page error occurs when loading.
   * @zh  网页加载出错。
   * @property {String} ERROR
   */
  //

  function emptyCallback() {}
  /**
   * @en
   * cc.WebView is a component for display web pages in the game.
   *
   * @zh
   * WebView 组件，用于在游戏中显示网页。
   */


  var // @executeInEditMode
  WebviewComponent = (_dec = (0, _classDecorator.ccclass)('cc.WebviewComponent'), _dec2 = (0, _classDecorator.help)('i18n:cc.WebviewComponent'), _dec3 = (0, _classDecorator.menu)('UI/WebView'), _dec4 = (0, _classDecorator.executionOrder)(100), _dec5 = (0, _classDecorator.property)({
    tooltip: '指定 WebView 加载的网址，它应该是一个 http 或者 https 开头的字符串'
  }), _dec6 = (0, _classDecorator.property)({
    type: _componentEventHandler.EventHandler,
    tooltip: 'WebView 的回调事件，当网页加载过程中，加载完成后或者加载出错时都会回调此函数'
  }), _dec(_class = _dec2(_class = _dec3(_class = _dec4(_class = (_class2 = (_temp = _class3 = /*#__PURE__*/function (_UIComponent) {
    _inherits(WebviewComponent, _UIComponent);

    _createClass(WebviewComponent, [{
      key: "url",

      /**
       * @en
       * A given URL to be loaded by the WebView, it should have a http or https prefix.
       *
       * @zh
       * 指定 WebView 加载的网址，它应该是一个 http 或者 https 开头的字符串。
       */
      get: function get() {
        return this._url;
      },
      set: function set(url) {
        this._url = url;
        var impl = this._impl;

        if (impl) {
          impl.loadURL(url);
        }
      }
    }]);

    function WebviewComponent() {
      var _this;

      _classCallCheck(this, WebviewComponent);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(WebviewComponent).call(this)); //  TODO: finished in EDITOR

      _initializerDefineProperty(_this, "webviewEvents", _descriptor, _assertThisInitialized(_this));

      _initializerDefineProperty(_this, "_url", _descriptor2, _assertThisInitialized(_this));

      _this._impl = null;

      if (!_defaultConstants.EDITOR) {
        _this._impl = new _webviewImpl.WebViewImpl();
      }

      return _this;
    }

    _createClass(WebviewComponent, [{
      key: "onRestore",
      value: function onRestore() {
        if (!this._impl) {
          this._impl = new _webviewImpl.WebViewImpl();
        }
      }
    }, {
      key: "onEnable",
      value: function onEnable() {
        if (!this._impl) {
          return;
        }

        var impl = this._impl;
        impl.createDomElementIfNeeded(this.node.width, this.node.height);
        impl.loadURL(this._url);
        impl.setVisible(true); // if (!EDITOR) {

        impl.setEventListener(EventType.LOADED, this._onWebViewLoaded.bind(this));
        impl.setEventListener(EventType.LOADING, this._onWebViewLoading.bind(this));
        impl.setEventListener(EventType.ERROR, this._onWebViewLoadError.bind(this)); // }
      }
    }, {
      key: "onDisable",
      value: function onDisable() {
        if (!this._impl) {
          return;
        }

        var impl = this._impl;
        impl.setVisible(false); // if (!EDITOR) {

        impl.setEventListener(EventType.LOADED, emptyCallback);
        impl.setEventListener(EventType.LOADING, emptyCallback);
        impl.setEventListener(EventType.ERROR, emptyCallback); // }
      }
    }, {
      key: "onDestroy",
      value: function onDestroy() {
        if (this._impl) {
          this._impl.destroy();

          this._impl = null;
        }
      }
    }, {
      key: "update",
      value: function update(dt) {
        if (_defaultConstants.EDITOR) {
          return;
        }

        if (this._impl) {
          this._impl.updateMatrix(this.node);
        }
      }
      /**
       * @en
       * Set javascript interface scheme (see also setOnJSCallback). <br/>
       * Note: Supports only on the Android and iOS. For HTML5, please refer to the official documentation.<br/>
       * Please refer to the official documentation for more details.
       *
       * @zh
       * 设置 JavaScript 接口方案（与 'setOnJSCallback' 配套使用）。<br/>
       * 注意：只支持 Android 和 iOS ，Web 端用法请前往官方文档查看。<br/>
       * 详情请参阅官方文档
       * @param scheme - 接口方案。
       */

    }, {
      key: "setJavascriptInterfaceScheme",
      value: function setJavascriptInterfaceScheme(scheme) {
        if (this._impl) {
          this._impl.setJavascriptInterfaceScheme(scheme);
        }
      }
      /**
       * @en
       * This callback called when load URL that start with javascript
       * interface scheme (see also setJavascriptInterfaceScheme). <br/>
       * Note: Supports only on the Android and iOS. For HTML5, please refer to the official documentation.<br/>
       * Please refer to the official documentation for more details.
       *
       * @zh
       * 当加载 URL 以 JavaScript 接口方案开始时调用这个回调函数。<br/>
       * 注意：只支持 Android 和 iOS，Web 端用法请前往官方文档查看。
       * 详情请参阅官方文档
       *
       * @param callback
       */

    }, {
      key: "setOnJSCallback",
      value: function setOnJSCallback(callback) {
        if (this._impl) {
          this._impl.setOnJSCallback(callback);
        }
      }
      /**
       * @en
       * Evaluates JavaScript in the context of the currently displayed page. <br/>
       * Please refer to the official document for more details <br/>
       * Note: Cross domain issues need to be resolved by yourself <br/>
       *
       * @zh
       * 执行 WebView 内部页面脚本（详情请参阅官方文档）。 <br/>
       * 注意：需要自行解决跨域问题
       *
       * @param str
       */

    }, {
      key: "evaluateJS",
      value: function evaluateJS(str) {
        if (this._impl) {
          this._impl.evaluateJS(str);
        }
      }
    }, {
      key: "_onWebViewLoaded",
      value: function _onWebViewLoaded() {
        _componentEventHandler.EventHandler.emitEvents(this.webviewEvents, this, EventType.LOADED);

        this.node.emit('loaded', this);
      }
    }, {
      key: "_onWebViewLoading",
      value: function _onWebViewLoading() {
        _componentEventHandler.EventHandler.emitEvents(this.webviewEvents, this, EventType.LOADING);

        this.node.emit('loading', this);
        return true;
      }
    }, {
      key: "_onWebViewLoadError",
      value: function _onWebViewLoadError() {
        _componentEventHandler.EventHandler.emitEvents(this.webviewEvents, this, EventType.ERROR);

        this.node.emit('error', this);
      }
    }]);

    return WebviewComponent;
  }(_uiComponent.UIComponent), _class3.EventType = EventType, _temp), (_applyDecoratedDescriptor(_class2.prototype, "url", [_dec5], Object.getOwnPropertyDescriptor(_class2.prototype, "url"), _class2.prototype), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "webviewEvents", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return [];
    }
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "_url", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return '';
    }
  })), _class2)) || _class) || _class) || _class) || _class);
  _exports.WebviewComponent = WebviewComponent;
  cc.WebviewComponent = WebviewComponent;
  /**
   * @en if you don't need the WebView and it isn't in any running Scene, you should
   * call the destroy method on this component or the associated node explicitly.
   * Otherwise, the created DOM element won't be removed from web page.
   *
   * @zh
   * 如果你不再使用 WebView，并且组件未添加到场景中，那么你必须手动对组件或所在节点调用 destroy。
   * 这样才能移除网页上的 DOM 节点，避免 Web 平台内存泄露。
   * @example
   * ```
   * webview.node.parent = null;  // or  webview.node.removeFromParent(false);
   * // when you don't need webview anymore
   * webview.node.destroy();
   * ```
   * @method destroy
   * @return {Boolean} whether it is the first time the destroy being called
   */
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,