(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports);
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports);
    global.define = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.GFXFormatSize = GFXFormatSize;
  _exports.GFXFormatSurfaceSize = GFXFormatSurfaceSize;
  _exports.GFXGetTypeSize = GFXGetTypeSize;
  _exports.getTypedArrayConstructor = getTypedArrayConstructor;
  _exports.GFXFormatInfos = _exports.GFXFormatType = _exports.GFXBufferTextureCopy = _exports.GFXTextureCopy = _exports.GFXTextureSubres = _exports.GFXClearFlag = _exports.GFXQueueType = _exports.GFXStencilFace = _exports.GFXDynamicState = _exports.GFXPipelineBindPoint = _exports.GFXTextureLayout = _exports.GFXStoreOp = _exports.GFXLoadOp = _exports.GFXCommandBufferType = _exports.GFXBindingType = _exports.GFXShaderType = _exports.GFXTextureViewType = _exports.GFXTextureFlagBit = _exports.GFXSampleCount = _exports.GFXTextureUsageBit = _exports.GFXTextureType = _exports.GFXAddress = _exports.GFXFilter = _exports.GFXColorMask = _exports.GFXBlendFactor = _exports.GFXBlendOp = _exports.GFXStencilOp = _exports.GFXComparisonFunc = _exports.GFXCullMode = _exports.GFXShadeModel = _exports.GFXPolygonMode = _exports.GFXPrimitiveMode = _exports.GFXBufferAccessBit = _exports.GFXBufferFlagBit = _exports.GFXMemoryUsageBit = _exports.GFXBufferUsageBit = _exports.GFXFormat = _exports.GFXType = _exports.GFXAttributeName = _exports.GFXObject = _exports.GFXStatus = _exports.GFXObjectType = _exports.GFX_MAX_BUFFER_BINDINGS = _exports.GFX_MAX_ATTACHMENTS = _exports.GFX_MAX_TEXTURE_UNITS = _exports.GFX_MAX_VERTEX_ATTRIBUTES = void 0;

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  /**
   * @category gfx
   */
  var GFX_MAX_VERTEX_ATTRIBUTES = 16;
  _exports.GFX_MAX_VERTEX_ATTRIBUTES = GFX_MAX_VERTEX_ATTRIBUTES;
  var GFX_MAX_TEXTURE_UNITS = 16;
  _exports.GFX_MAX_TEXTURE_UNITS = GFX_MAX_TEXTURE_UNITS;
  var GFX_MAX_ATTACHMENTS = 4;
  _exports.GFX_MAX_ATTACHMENTS = GFX_MAX_ATTACHMENTS;
  var GFX_MAX_BUFFER_BINDINGS = 24;
  _exports.GFX_MAX_BUFFER_BINDINGS = GFX_MAX_BUFFER_BINDINGS;
  var GFXObjectType;
  _exports.GFXObjectType = GFXObjectType;

  (function (GFXObjectType) {
    GFXObjectType[GFXObjectType["UNKNOWN"] = 0] = "UNKNOWN";
    GFXObjectType[GFXObjectType["BUFFER"] = 1] = "BUFFER";
    GFXObjectType[GFXObjectType["TEXTURE"] = 2] = "TEXTURE";
    GFXObjectType[GFXObjectType["TEXTURE_VIEW"] = 3] = "TEXTURE_VIEW";
    GFXObjectType[GFXObjectType["RENDER_PASS"] = 4] = "RENDER_PASS";
    GFXObjectType[GFXObjectType["FRAMEBUFFER"] = 5] = "FRAMEBUFFER";
    GFXObjectType[GFXObjectType["SAMPLER"] = 6] = "SAMPLER";
    GFXObjectType[GFXObjectType["SHADER"] = 7] = "SHADER";
    GFXObjectType[GFXObjectType["PIPELINE_LAYOUT"] = 8] = "PIPELINE_LAYOUT";
    GFXObjectType[GFXObjectType["PIPELINE_STATE"] = 9] = "PIPELINE_STATE";
    GFXObjectType[GFXObjectType["BINDING_LAYOUT"] = 10] = "BINDING_LAYOUT";
    GFXObjectType[GFXObjectType["INPUT_ASSEMBLER"] = 11] = "INPUT_ASSEMBLER";
    GFXObjectType[GFXObjectType["COMMAND_ALLOCATOR"] = 12] = "COMMAND_ALLOCATOR";
    GFXObjectType[GFXObjectType["COMMAND_BUFFER"] = 13] = "COMMAND_BUFFER";
    GFXObjectType[GFXObjectType["QUEUE"] = 14] = "QUEUE";
    GFXObjectType[GFXObjectType["WINDOW"] = 15] = "WINDOW";
  })(GFXObjectType || (_exports.GFXObjectType = GFXObjectType = {}));

  var GFXStatus;
  /**
   * @en GFX base object.
   * @zh GFX 基类对象。
   */

  _exports.GFXStatus = GFXStatus;

  (function (GFXStatus) {
    GFXStatus[GFXStatus["UNREADY"] = 0] = "UNREADY";
    GFXStatus[GFXStatus["FAILED"] = 1] = "FAILED";
    GFXStatus[GFXStatus["SUCCESS"] = 2] = "SUCCESS";
  })(GFXStatus || (_exports.GFXStatus = GFXStatus = {}));

  var GFXObject = /*#__PURE__*/function () {
    _createClass(GFXObject, [{
      key: "gfxType",
      get: function get() {
        return this._gfxType;
      }
    }, {
      key: "status",
      get: function get() {
        return this._status;
      }
    }]);

    function GFXObject(gfxType) {
      _classCallCheck(this, GFXObject);

      this._gfxType = GFXObjectType.UNKNOWN;
      this._status = GFXStatus.UNREADY;
      this._gfxType = gfxType;
    }

    return GFXObject;
  }();

  _exports.GFXObject = GFXObject;
  var GFXAttributeName;
  _exports.GFXAttributeName = GFXAttributeName;

  (function (GFXAttributeName) {
    GFXAttributeName["ATTR_POSITION"] = "a_position";
    GFXAttributeName["ATTR_NORMAL"] = "a_normal";
    GFXAttributeName["ATTR_TANGENT"] = "a_tangent";
    GFXAttributeName["ATTR_BITANGENT"] = "a_bitangent";
    GFXAttributeName["ATTR_WEIGHTS"] = "a_weights";
    GFXAttributeName["ATTR_JOINTS"] = "a_joints";
    GFXAttributeName["ATTR_COLOR"] = "a_color";
    GFXAttributeName["ATTR_COLOR1"] = "a_color1";
    GFXAttributeName["ATTR_COLOR2"] = "a_color2";
    GFXAttributeName["ATTR_TEX_COORD"] = "a_texCoord";
    GFXAttributeName["ATTR_TEX_COORD1"] = "a_texCoord1";
    GFXAttributeName["ATTR_TEX_COORD2"] = "a_texCoord2";
    GFXAttributeName["ATTR_TEX_COORD3"] = "a_texCoord3";
    GFXAttributeName["ATTR_TEX_COORD4"] = "a_texCoord4";
    GFXAttributeName["ATTR_TEX_COORD5"] = "a_texCoord5";
    GFXAttributeName["ATTR_TEX_COORD6"] = "a_texCoord6";
    GFXAttributeName["ATTR_TEX_COORD7"] = "a_texCoord7";
    GFXAttributeName["ATTR_TEX_COORD8"] = "a_texCoord8";
    GFXAttributeName["ATTR_BATCH_ID"] = "a_batch_id";
    GFXAttributeName["ATTR_BATCH_UV"] = "a_batch_uv";
  })(GFXAttributeName || (_exports.GFXAttributeName = GFXAttributeName = {}));

  var GFXType;
  _exports.GFXType = GFXType;

  (function (GFXType) {
    GFXType[GFXType["UNKNOWN"] = 0] = "UNKNOWN";
    GFXType[GFXType["BOOL"] = 1] = "BOOL";
    GFXType[GFXType["BOOL2"] = 2] = "BOOL2";
    GFXType[GFXType["BOOL3"] = 3] = "BOOL3";
    GFXType[GFXType["BOOL4"] = 4] = "BOOL4";
    GFXType[GFXType["INT"] = 5] = "INT";
    GFXType[GFXType["INT2"] = 6] = "INT2";
    GFXType[GFXType["INT3"] = 7] = "INT3";
    GFXType[GFXType["INT4"] = 8] = "INT4";
    GFXType[GFXType["UINT"] = 9] = "UINT";
    GFXType[GFXType["UINT2"] = 10] = "UINT2";
    GFXType[GFXType["UINT3"] = 11] = "UINT3";
    GFXType[GFXType["UINT4"] = 12] = "UINT4";
    GFXType[GFXType["FLOAT"] = 13] = "FLOAT";
    GFXType[GFXType["FLOAT2"] = 14] = "FLOAT2";
    GFXType[GFXType["FLOAT3"] = 15] = "FLOAT3";
    GFXType[GFXType["FLOAT4"] = 16] = "FLOAT4";
    GFXType[GFXType["MAT2"] = 17] = "MAT2";
    GFXType[GFXType["MAT2X3"] = 18] = "MAT2X3";
    GFXType[GFXType["MAT2X4"] = 19] = "MAT2X4";
    GFXType[GFXType["MAT3X2"] = 20] = "MAT3X2";
    GFXType[GFXType["MAT3"] = 21] = "MAT3";
    GFXType[GFXType["MAT3X4"] = 22] = "MAT3X4";
    GFXType[GFXType["MAT4X2"] = 23] = "MAT4X2";
    GFXType[GFXType["MAT4X3"] = 24] = "MAT4X3";
    GFXType[GFXType["MAT4"] = 25] = "MAT4";
    GFXType[GFXType["SAMPLER1D"] = 26] = "SAMPLER1D";
    GFXType[GFXType["SAMPLER1D_ARRAY"] = 27] = "SAMPLER1D_ARRAY";
    GFXType[GFXType["SAMPLER2D"] = 28] = "SAMPLER2D";
    GFXType[GFXType["SAMPLER2D_ARRAY"] = 29] = "SAMPLER2D_ARRAY";
    GFXType[GFXType["SAMPLER3D"] = 30] = "SAMPLER3D";
    GFXType[GFXType["SAMPLER_CUBE"] = 31] = "SAMPLER_CUBE";
    GFXType[GFXType["COUNT"] = 32] = "COUNT";
  })(GFXType || (_exports.GFXType = GFXType = {}));

  var GFXFormat;
  _exports.GFXFormat = GFXFormat;

  (function (GFXFormat) {
    GFXFormat[GFXFormat["UNKNOWN"] = 0] = "UNKNOWN";
    GFXFormat[GFXFormat["A8"] = 1] = "A8";
    GFXFormat[GFXFormat["L8"] = 2] = "L8";
    GFXFormat[GFXFormat["LA8"] = 3] = "LA8";
    GFXFormat[GFXFormat["R8"] = 4] = "R8";
    GFXFormat[GFXFormat["R8SN"] = 5] = "R8SN";
    GFXFormat[GFXFormat["R8UI"] = 6] = "R8UI";
    GFXFormat[GFXFormat["R8I"] = 7] = "R8I";
    GFXFormat[GFXFormat["R16F"] = 8] = "R16F";
    GFXFormat[GFXFormat["R16UI"] = 9] = "R16UI";
    GFXFormat[GFXFormat["R16I"] = 10] = "R16I";
    GFXFormat[GFXFormat["R32F"] = 11] = "R32F";
    GFXFormat[GFXFormat["R32UI"] = 12] = "R32UI";
    GFXFormat[GFXFormat["R32I"] = 13] = "R32I";
    GFXFormat[GFXFormat["RG8"] = 14] = "RG8";
    GFXFormat[GFXFormat["RG8SN"] = 15] = "RG8SN";
    GFXFormat[GFXFormat["RG8UI"] = 16] = "RG8UI";
    GFXFormat[GFXFormat["RG8I"] = 17] = "RG8I";
    GFXFormat[GFXFormat["RG16F"] = 18] = "RG16F";
    GFXFormat[GFXFormat["RG16UI"] = 19] = "RG16UI";
    GFXFormat[GFXFormat["RG16I"] = 20] = "RG16I";
    GFXFormat[GFXFormat["RG32F"] = 21] = "RG32F";
    GFXFormat[GFXFormat["RG32UI"] = 22] = "RG32UI";
    GFXFormat[GFXFormat["RG32I"] = 23] = "RG32I";
    GFXFormat[GFXFormat["RGB8"] = 24] = "RGB8";
    GFXFormat[GFXFormat["SRGB8"] = 25] = "SRGB8";
    GFXFormat[GFXFormat["RGB8SN"] = 26] = "RGB8SN";
    GFXFormat[GFXFormat["RGB8UI"] = 27] = "RGB8UI";
    GFXFormat[GFXFormat["RGB8I"] = 28] = "RGB8I";
    GFXFormat[GFXFormat["RGB16F"] = 29] = "RGB16F";
    GFXFormat[GFXFormat["RGB16UI"] = 30] = "RGB16UI";
    GFXFormat[GFXFormat["RGB16I"] = 31] = "RGB16I";
    GFXFormat[GFXFormat["RGB32F"] = 32] = "RGB32F";
    GFXFormat[GFXFormat["RGB32UI"] = 33] = "RGB32UI";
    GFXFormat[GFXFormat["RGB32I"] = 34] = "RGB32I";
    GFXFormat[GFXFormat["RGBA8"] = 35] = "RGBA8";
    GFXFormat[GFXFormat["SRGB8_A8"] = 36] = "SRGB8_A8";
    GFXFormat[GFXFormat["RGBA8SN"] = 37] = "RGBA8SN";
    GFXFormat[GFXFormat["RGBA8UI"] = 38] = "RGBA8UI";
    GFXFormat[GFXFormat["RGBA8I"] = 39] = "RGBA8I";
    GFXFormat[GFXFormat["RGBA16F"] = 40] = "RGBA16F";
    GFXFormat[GFXFormat["RGBA16UI"] = 41] = "RGBA16UI";
    GFXFormat[GFXFormat["RGBA16I"] = 42] = "RGBA16I";
    GFXFormat[GFXFormat["RGBA32F"] = 43] = "RGBA32F";
    GFXFormat[GFXFormat["RGBA32UI"] = 44] = "RGBA32UI";
    GFXFormat[GFXFormat["RGBA32I"] = 45] = "RGBA32I";
    GFXFormat[GFXFormat["R5G6B5"] = 46] = "R5G6B5";
    GFXFormat[GFXFormat["R11G11B10F"] = 47] = "R11G11B10F";
    GFXFormat[GFXFormat["RGB5A1"] = 48] = "RGB5A1";
    GFXFormat[GFXFormat["RGBA4"] = 49] = "RGBA4";
    GFXFormat[GFXFormat["RGB10A2"] = 50] = "RGB10A2";
    GFXFormat[GFXFormat["RGB10A2UI"] = 51] = "RGB10A2UI";
    GFXFormat[GFXFormat["RGB9E5"] = 52] = "RGB9E5";
    GFXFormat[GFXFormat["D16"] = 53] = "D16";
    GFXFormat[GFXFormat["D16S8"] = 54] = "D16S8";
    GFXFormat[GFXFormat["D24"] = 55] = "D24";
    GFXFormat[GFXFormat["D24S8"] = 56] = "D24S8";
    GFXFormat[GFXFormat["D32F"] = 57] = "D32F";
    GFXFormat[GFXFormat["D32F_S8"] = 58] = "D32F_S8";
    GFXFormat[GFXFormat["BC1"] = 59] = "BC1";
    GFXFormat[GFXFormat["BC1_ALPHA"] = 60] = "BC1_ALPHA";
    GFXFormat[GFXFormat["BC1_SRGB"] = 61] = "BC1_SRGB";
    GFXFormat[GFXFormat["BC1_SRGB_ALPHA"] = 62] = "BC1_SRGB_ALPHA";
    GFXFormat[GFXFormat["BC2"] = 63] = "BC2";
    GFXFormat[GFXFormat["BC2_SRGB"] = 64] = "BC2_SRGB";
    GFXFormat[GFXFormat["BC3"] = 65] = "BC3";
    GFXFormat[GFXFormat["BC3_SRGB"] = 66] = "BC3_SRGB";
    GFXFormat[GFXFormat["BC4"] = 67] = "BC4";
    GFXFormat[GFXFormat["BC4_SNORM"] = 68] = "BC4_SNORM";
    GFXFormat[GFXFormat["BC5"] = 69] = "BC5";
    GFXFormat[GFXFormat["BC5_SNORM"] = 70] = "BC5_SNORM";
    GFXFormat[GFXFormat["BC6H_UF16"] = 71] = "BC6H_UF16";
    GFXFormat[GFXFormat["BC6H_SF16"] = 72] = "BC6H_SF16";
    GFXFormat[GFXFormat["BC7"] = 73] = "BC7";
    GFXFormat[GFXFormat["BC7_SRGB"] = 74] = "BC7_SRGB";
    GFXFormat[GFXFormat["ETC_RGB8"] = 75] = "ETC_RGB8";
    GFXFormat[GFXFormat["ETC2_RGB8"] = 76] = "ETC2_RGB8";
    GFXFormat[GFXFormat["ETC2_SRGB8"] = 77] = "ETC2_SRGB8";
    GFXFormat[GFXFormat["ETC2_RGB8_A1"] = 78] = "ETC2_RGB8_A1";
    GFXFormat[GFXFormat["ETC2_SRGB8_A1"] = 79] = "ETC2_SRGB8_A1";
    GFXFormat[GFXFormat["ETC2_RGBA8"] = 80] = "ETC2_RGBA8";
    GFXFormat[GFXFormat["ETC2_SRGB8_A8"] = 81] = "ETC2_SRGB8_A8";
    GFXFormat[GFXFormat["EAC_R11"] = 82] = "EAC_R11";
    GFXFormat[GFXFormat["EAC_R11SN"] = 83] = "EAC_R11SN";
    GFXFormat[GFXFormat["EAC_RG11"] = 84] = "EAC_RG11";
    GFXFormat[GFXFormat["EAC_RG11SN"] = 85] = "EAC_RG11SN";
    GFXFormat[GFXFormat["PVRTC_RGB2"] = 86] = "PVRTC_RGB2";
    GFXFormat[GFXFormat["PVRTC_RGBA2"] = 87] = "PVRTC_RGBA2";
    GFXFormat[GFXFormat["PVRTC_RGB4"] = 88] = "PVRTC_RGB4";
    GFXFormat[GFXFormat["PVRTC_RGBA4"] = 89] = "PVRTC_RGBA4";
    GFXFormat[GFXFormat["PVRTC2_2BPP"] = 90] = "PVRTC2_2BPP";
    GFXFormat[GFXFormat["PVRTC2_4BPP"] = 91] = "PVRTC2_4BPP";
  })(GFXFormat || (_exports.GFXFormat = GFXFormat = {}));

  var GFXBufferUsageBit;
  _exports.GFXBufferUsageBit = GFXBufferUsageBit;

  (function (GFXBufferUsageBit) {
    GFXBufferUsageBit[GFXBufferUsageBit["NONE"] = 0] = "NONE";
    GFXBufferUsageBit[GFXBufferUsageBit["TRANSFER_SRC"] = 1] = "TRANSFER_SRC";
    GFXBufferUsageBit[GFXBufferUsageBit["TRANSFER_DST"] = 2] = "TRANSFER_DST";
    GFXBufferUsageBit[GFXBufferUsageBit["INDEX"] = 4] = "INDEX";
    GFXBufferUsageBit[GFXBufferUsageBit["VERTEX"] = 8] = "VERTEX";
    GFXBufferUsageBit[GFXBufferUsageBit["UNIFORM"] = 16] = "UNIFORM";
    GFXBufferUsageBit[GFXBufferUsageBit["STORAGE"] = 32] = "STORAGE";
    GFXBufferUsageBit[GFXBufferUsageBit["INDIRECT"] = 64] = "INDIRECT";
  })(GFXBufferUsageBit || (_exports.GFXBufferUsageBit = GFXBufferUsageBit = {}));

  var GFXMemoryUsageBit;
  _exports.GFXMemoryUsageBit = GFXMemoryUsageBit;

  (function (GFXMemoryUsageBit) {
    GFXMemoryUsageBit[GFXMemoryUsageBit["NONE"] = 0] = "NONE";
    GFXMemoryUsageBit[GFXMemoryUsageBit["DEVICE"] = 1] = "DEVICE";
    GFXMemoryUsageBit[GFXMemoryUsageBit["HOST"] = 2] = "HOST";
  })(GFXMemoryUsageBit || (_exports.GFXMemoryUsageBit = GFXMemoryUsageBit = {}));

  var GFXBufferFlagBit;
  _exports.GFXBufferFlagBit = GFXBufferFlagBit;

  (function (GFXBufferFlagBit) {
    GFXBufferFlagBit[GFXBufferFlagBit["NONE"] = 0] = "NONE";
    GFXBufferFlagBit[GFXBufferFlagBit["BAKUP_BUFFER"] = 4] = "BAKUP_BUFFER";
  })(GFXBufferFlagBit || (_exports.GFXBufferFlagBit = GFXBufferFlagBit = {}));

  var GFXBufferAccessBit;
  _exports.GFXBufferAccessBit = GFXBufferAccessBit;

  (function (GFXBufferAccessBit) {
    GFXBufferAccessBit[GFXBufferAccessBit["NONE"] = 0] = "NONE";
    GFXBufferAccessBit[GFXBufferAccessBit["READ"] = 1] = "READ";
    GFXBufferAccessBit[GFXBufferAccessBit["WRITE"] = 2] = "WRITE";
  })(GFXBufferAccessBit || (_exports.GFXBufferAccessBit = GFXBufferAccessBit = {}));

  var GFXPrimitiveMode;
  _exports.GFXPrimitiveMode = GFXPrimitiveMode;

  (function (GFXPrimitiveMode) {
    GFXPrimitiveMode[GFXPrimitiveMode["POINT_LIST"] = 0] = "POINT_LIST";
    GFXPrimitiveMode[GFXPrimitiveMode["LINE_LIST"] = 1] = "LINE_LIST";
    GFXPrimitiveMode[GFXPrimitiveMode["LINE_STRIP"] = 2] = "LINE_STRIP";
    GFXPrimitiveMode[GFXPrimitiveMode["LINE_LOOP"] = 3] = "LINE_LOOP";
    GFXPrimitiveMode[GFXPrimitiveMode["LINE_LIST_ADJACENCY"] = 4] = "LINE_LIST_ADJACENCY";
    GFXPrimitiveMode[GFXPrimitiveMode["LINE_STRIP_ADJACENCY"] = 5] = "LINE_STRIP_ADJACENCY";
    GFXPrimitiveMode[GFXPrimitiveMode["ISO_LINE_LIST"] = 6] = "ISO_LINE_LIST";
    GFXPrimitiveMode[GFXPrimitiveMode["TRIANGLE_LIST"] = 7] = "TRIANGLE_LIST";
    GFXPrimitiveMode[GFXPrimitiveMode["TRIANGLE_STRIP"] = 8] = "TRIANGLE_STRIP";
    GFXPrimitiveMode[GFXPrimitiveMode["TRIANGLE_FAN"] = 9] = "TRIANGLE_FAN";
    GFXPrimitiveMode[GFXPrimitiveMode["TRIANGLE_LIST_ADJACENCY"] = 10] = "TRIANGLE_LIST_ADJACENCY";
    GFXPrimitiveMode[GFXPrimitiveMode["TRIANGLE_STRIP_ADJACENCY"] = 11] = "TRIANGLE_STRIP_ADJACENCY";
    GFXPrimitiveMode[GFXPrimitiveMode["TRIANGLE_PATCH_ADJACENCY"] = 12] = "TRIANGLE_PATCH_ADJACENCY";
    GFXPrimitiveMode[GFXPrimitiveMode["QUAD_PATCH_LIST"] = 13] = "QUAD_PATCH_LIST";
  })(GFXPrimitiveMode || (_exports.GFXPrimitiveMode = GFXPrimitiveMode = {}));

  var GFXPolygonMode;
  _exports.GFXPolygonMode = GFXPolygonMode;

  (function (GFXPolygonMode) {
    GFXPolygonMode[GFXPolygonMode["FILL"] = 0] = "FILL";
    GFXPolygonMode[GFXPolygonMode["POINT"] = 1] = "POINT";
    GFXPolygonMode[GFXPolygonMode["LINE"] = 2] = "LINE";
  })(GFXPolygonMode || (_exports.GFXPolygonMode = GFXPolygonMode = {}));

  var GFXShadeModel;
  _exports.GFXShadeModel = GFXShadeModel;

  (function (GFXShadeModel) {
    GFXShadeModel[GFXShadeModel["GOURAND"] = 0] = "GOURAND";
    GFXShadeModel[GFXShadeModel["FLAT"] = 1] = "FLAT";
  })(GFXShadeModel || (_exports.GFXShadeModel = GFXShadeModel = {}));

  var GFXCullMode;
  _exports.GFXCullMode = GFXCullMode;

  (function (GFXCullMode) {
    GFXCullMode[GFXCullMode["NONE"] = 0] = "NONE";
    GFXCullMode[GFXCullMode["FRONT"] = 1] = "FRONT";
    GFXCullMode[GFXCullMode["BACK"] = 2] = "BACK";
  })(GFXCullMode || (_exports.GFXCullMode = GFXCullMode = {}));

  var GFXComparisonFunc;
  _exports.GFXComparisonFunc = GFXComparisonFunc;

  (function (GFXComparisonFunc) {
    GFXComparisonFunc[GFXComparisonFunc["NEVER"] = 0] = "NEVER";
    GFXComparisonFunc[GFXComparisonFunc["LESS"] = 1] = "LESS";
    GFXComparisonFunc[GFXComparisonFunc["EQUAL"] = 2] = "EQUAL";
    GFXComparisonFunc[GFXComparisonFunc["LESS_EQUAL"] = 3] = "LESS_EQUAL";
    GFXComparisonFunc[GFXComparisonFunc["GREATER"] = 4] = "GREATER";
    GFXComparisonFunc[GFXComparisonFunc["NOT_EQUAL"] = 5] = "NOT_EQUAL";
    GFXComparisonFunc[GFXComparisonFunc["GREATER_EQUAL"] = 6] = "GREATER_EQUAL";
    GFXComparisonFunc[GFXComparisonFunc["ALWAYS"] = 7] = "ALWAYS";
  })(GFXComparisonFunc || (_exports.GFXComparisonFunc = GFXComparisonFunc = {}));

  var GFXStencilOp;
  _exports.GFXStencilOp = GFXStencilOp;

  (function (GFXStencilOp) {
    GFXStencilOp[GFXStencilOp["ZERO"] = 0] = "ZERO";
    GFXStencilOp[GFXStencilOp["KEEP"] = 1] = "KEEP";
    GFXStencilOp[GFXStencilOp["REPLACE"] = 2] = "REPLACE";
    GFXStencilOp[GFXStencilOp["INCR"] = 3] = "INCR";
    GFXStencilOp[GFXStencilOp["DECR"] = 4] = "DECR";
    GFXStencilOp[GFXStencilOp["INVERT"] = 5] = "INVERT";
    GFXStencilOp[GFXStencilOp["INCR_WRAP"] = 6] = "INCR_WRAP";
    GFXStencilOp[GFXStencilOp["DECR_WRAP"] = 7] = "DECR_WRAP";
  })(GFXStencilOp || (_exports.GFXStencilOp = GFXStencilOp = {}));

  var GFXBlendOp;
  _exports.GFXBlendOp = GFXBlendOp;

  (function (GFXBlendOp) {
    GFXBlendOp[GFXBlendOp["ADD"] = 0] = "ADD";
    GFXBlendOp[GFXBlendOp["SUB"] = 1] = "SUB";
    GFXBlendOp[GFXBlendOp["REV_SUB"] = 2] = "REV_SUB";
    GFXBlendOp[GFXBlendOp["MIN"] = 3] = "MIN";
    GFXBlendOp[GFXBlendOp["MAX"] = 4] = "MAX";
  })(GFXBlendOp || (_exports.GFXBlendOp = GFXBlendOp = {}));

  var GFXBlendFactor;
  _exports.GFXBlendFactor = GFXBlendFactor;

  (function (GFXBlendFactor) {
    GFXBlendFactor[GFXBlendFactor["ZERO"] = 0] = "ZERO";
    GFXBlendFactor[GFXBlendFactor["ONE"] = 1] = "ONE";
    GFXBlendFactor[GFXBlendFactor["SRC_ALPHA"] = 2] = "SRC_ALPHA";
    GFXBlendFactor[GFXBlendFactor["DST_ALPHA"] = 3] = "DST_ALPHA";
    GFXBlendFactor[GFXBlendFactor["ONE_MINUS_SRC_ALPHA"] = 4] = "ONE_MINUS_SRC_ALPHA";
    GFXBlendFactor[GFXBlendFactor["ONE_MINUS_DST_ALPHA"] = 5] = "ONE_MINUS_DST_ALPHA";
    GFXBlendFactor[GFXBlendFactor["SRC_COLOR"] = 6] = "SRC_COLOR";
    GFXBlendFactor[GFXBlendFactor["DST_COLOR"] = 7] = "DST_COLOR";
    GFXBlendFactor[GFXBlendFactor["ONE_MINUS_SRC_COLOR"] = 8] = "ONE_MINUS_SRC_COLOR";
    GFXBlendFactor[GFXBlendFactor["ONE_MINUS_DST_COLOR"] = 9] = "ONE_MINUS_DST_COLOR";
    GFXBlendFactor[GFXBlendFactor["SRC_ALPHA_SATURATE"] = 10] = "SRC_ALPHA_SATURATE";
    GFXBlendFactor[GFXBlendFactor["CONSTANT_COLOR"] = 11] = "CONSTANT_COLOR";
    GFXBlendFactor[GFXBlendFactor["ONE_MINUS_CONSTANT_COLOR"] = 12] = "ONE_MINUS_CONSTANT_COLOR";
    GFXBlendFactor[GFXBlendFactor["CONSTANT_ALPHA"] = 13] = "CONSTANT_ALPHA";
    GFXBlendFactor[GFXBlendFactor["ONE_MINUS_CONSTANT_ALPHA"] = 14] = "ONE_MINUS_CONSTANT_ALPHA";
  })(GFXBlendFactor || (_exports.GFXBlendFactor = GFXBlendFactor = {}));

  var GFXColorMask;
  _exports.GFXColorMask = GFXColorMask;

  (function (GFXColorMask) {
    GFXColorMask[GFXColorMask["NONE"] = 0] = "NONE";
    GFXColorMask[GFXColorMask["R"] = 1] = "R";
    GFXColorMask[GFXColorMask["G"] = 2] = "G";
    GFXColorMask[GFXColorMask["B"] = 4] = "B";
    GFXColorMask[GFXColorMask["A"] = 8] = "A";
    GFXColorMask[GFXColorMask["ALL"] = 15] = "ALL";
  })(GFXColorMask || (_exports.GFXColorMask = GFXColorMask = {}));

  var GFXFilter;
  _exports.GFXFilter = GFXFilter;

  (function (GFXFilter) {
    GFXFilter[GFXFilter["NONE"] = 0] = "NONE";
    GFXFilter[GFXFilter["POINT"] = 1] = "POINT";
    GFXFilter[GFXFilter["LINEAR"] = 2] = "LINEAR";
    GFXFilter[GFXFilter["ANISOTROPIC"] = 3] = "ANISOTROPIC";
  })(GFXFilter || (_exports.GFXFilter = GFXFilter = {}));

  var GFXAddress;
  _exports.GFXAddress = GFXAddress;

  (function (GFXAddress) {
    GFXAddress[GFXAddress["WRAP"] = 0] = "WRAP";
    GFXAddress[GFXAddress["MIRROR"] = 1] = "MIRROR";
    GFXAddress[GFXAddress["CLAMP"] = 2] = "CLAMP";
    GFXAddress[GFXAddress["BORDER"] = 3] = "BORDER";
  })(GFXAddress || (_exports.GFXAddress = GFXAddress = {}));

  var GFXTextureType;
  _exports.GFXTextureType = GFXTextureType;

  (function (GFXTextureType) {
    GFXTextureType[GFXTextureType["TEX1D"] = 0] = "TEX1D";
    GFXTextureType[GFXTextureType["TEX2D"] = 1] = "TEX2D";
    GFXTextureType[GFXTextureType["TEX3D"] = 2] = "TEX3D";
  })(GFXTextureType || (_exports.GFXTextureType = GFXTextureType = {}));

  var GFXTextureUsageBit;
  _exports.GFXTextureUsageBit = GFXTextureUsageBit;

  (function (GFXTextureUsageBit) {
    GFXTextureUsageBit[GFXTextureUsageBit["NONE"] = 0] = "NONE";
    GFXTextureUsageBit[GFXTextureUsageBit["TRANSFER_SRC"] = 1] = "TRANSFER_SRC";
    GFXTextureUsageBit[GFXTextureUsageBit["TRANSFER_DST"] = 2] = "TRANSFER_DST";
    GFXTextureUsageBit[GFXTextureUsageBit["SAMPLED"] = 4] = "SAMPLED";
    GFXTextureUsageBit[GFXTextureUsageBit["STORAGE"] = 8] = "STORAGE";
    GFXTextureUsageBit[GFXTextureUsageBit["COLOR_ATTACHMENT"] = 16] = "COLOR_ATTACHMENT";
    GFXTextureUsageBit[GFXTextureUsageBit["DEPTH_STENCIL_ATTACHMENT"] = 32] = "DEPTH_STENCIL_ATTACHMENT";
    GFXTextureUsageBit[GFXTextureUsageBit["TRANSIENT_ATTACHMENT"] = 64] = "TRANSIENT_ATTACHMENT";
    GFXTextureUsageBit[GFXTextureUsageBit["INPUT_ATTACHMENT"] = 128] = "INPUT_ATTACHMENT";
  })(GFXTextureUsageBit || (_exports.GFXTextureUsageBit = GFXTextureUsageBit = {}));

  var GFXSampleCount;
  _exports.GFXSampleCount = GFXSampleCount;

  (function (GFXSampleCount) {
    GFXSampleCount[GFXSampleCount["X1"] = 0] = "X1";
    GFXSampleCount[GFXSampleCount["X2"] = 1] = "X2";
    GFXSampleCount[GFXSampleCount["X4"] = 2] = "X4";
    GFXSampleCount[GFXSampleCount["X8"] = 3] = "X8";
    GFXSampleCount[GFXSampleCount["X16"] = 4] = "X16";
    GFXSampleCount[GFXSampleCount["X32"] = 5] = "X32";
    GFXSampleCount[GFXSampleCount["X64"] = 6] = "X64";
  })(GFXSampleCount || (_exports.GFXSampleCount = GFXSampleCount = {}));

  var GFXTextureFlagBit;
  _exports.GFXTextureFlagBit = GFXTextureFlagBit;

  (function (GFXTextureFlagBit) {
    GFXTextureFlagBit[GFXTextureFlagBit["NONE"] = 0] = "NONE";
    GFXTextureFlagBit[GFXTextureFlagBit["GEN_MIPMAP"] = 1] = "GEN_MIPMAP";
    GFXTextureFlagBit[GFXTextureFlagBit["CUBEMAP"] = 2] = "CUBEMAP";
    GFXTextureFlagBit[GFXTextureFlagBit["BAKUP_BUFFER"] = 4] = "BAKUP_BUFFER";
  })(GFXTextureFlagBit || (_exports.GFXTextureFlagBit = GFXTextureFlagBit = {}));

  var GFXTextureViewType;
  _exports.GFXTextureViewType = GFXTextureViewType;

  (function (GFXTextureViewType) {
    GFXTextureViewType[GFXTextureViewType["TV1D"] = 0] = "TV1D";
    GFXTextureViewType[GFXTextureViewType["TV2D"] = 1] = "TV2D";
    GFXTextureViewType[GFXTextureViewType["TV3D"] = 2] = "TV3D";
    GFXTextureViewType[GFXTextureViewType["CUBE"] = 3] = "CUBE";
    GFXTextureViewType[GFXTextureViewType["TV1D_ARRAY"] = 4] = "TV1D_ARRAY";
    GFXTextureViewType[GFXTextureViewType["TV2D_ARRAY"] = 5] = "TV2D_ARRAY";
  })(GFXTextureViewType || (_exports.GFXTextureViewType = GFXTextureViewType = {}));

  var GFXShaderType;
  _exports.GFXShaderType = GFXShaderType;

  (function (GFXShaderType) {
    GFXShaderType[GFXShaderType["VERTEX"] = 0] = "VERTEX";
    GFXShaderType[GFXShaderType["HULL"] = 1] = "HULL";
    GFXShaderType[GFXShaderType["DOMAIN"] = 2] = "DOMAIN";
    GFXShaderType[GFXShaderType["GEOMETRY"] = 3] = "GEOMETRY";
    GFXShaderType[GFXShaderType["FRAGMENT"] = 4] = "FRAGMENT";
    GFXShaderType[GFXShaderType["COMPUTE"] = 5] = "COMPUTE";
    GFXShaderType[GFXShaderType["COUNT"] = 6] = "COUNT";
  })(GFXShaderType || (_exports.GFXShaderType = GFXShaderType = {}));

  var GFXBindingType;
  _exports.GFXBindingType = GFXBindingType;

  (function (GFXBindingType) {
    GFXBindingType[GFXBindingType["UNKNOWN"] = 0] = "UNKNOWN";
    GFXBindingType[GFXBindingType["UNIFORM_BUFFER"] = 1] = "UNIFORM_BUFFER";
    GFXBindingType[GFXBindingType["SAMPLER"] = 2] = "SAMPLER";
    GFXBindingType[GFXBindingType["STORAGE_BUFFER"] = 3] = "STORAGE_BUFFER";
  })(GFXBindingType || (_exports.GFXBindingType = GFXBindingType = {}));

  var GFXCommandBufferType;
  _exports.GFXCommandBufferType = GFXCommandBufferType;

  (function (GFXCommandBufferType) {
    GFXCommandBufferType[GFXCommandBufferType["PRIMARY"] = 0] = "PRIMARY";
    GFXCommandBufferType[GFXCommandBufferType["SECONDARY"] = 1] = "SECONDARY";
  })(GFXCommandBufferType || (_exports.GFXCommandBufferType = GFXCommandBufferType = {}));

  var GFXLoadOp;
  _exports.GFXLoadOp = GFXLoadOp;

  (function (GFXLoadOp) {
    GFXLoadOp[GFXLoadOp["LOAD"] = 0] = "LOAD";
    GFXLoadOp[GFXLoadOp["CLEAR"] = 1] = "CLEAR";
    GFXLoadOp[GFXLoadOp["DISCARD"] = 2] = "DISCARD";
  })(GFXLoadOp || (_exports.GFXLoadOp = GFXLoadOp = {}));

  var GFXStoreOp;
  _exports.GFXStoreOp = GFXStoreOp;

  (function (GFXStoreOp) {
    GFXStoreOp[GFXStoreOp["STORE"] = 0] = "STORE";
    GFXStoreOp[GFXStoreOp["DISCARD"] = 1] = "DISCARD";
  })(GFXStoreOp || (_exports.GFXStoreOp = GFXStoreOp = {}));

  var GFXTextureLayout;
  _exports.GFXTextureLayout = GFXTextureLayout;

  (function (GFXTextureLayout) {
    GFXTextureLayout[GFXTextureLayout["UNDEFINED"] = 0] = "UNDEFINED";
    GFXTextureLayout[GFXTextureLayout["GENERAL"] = 1] = "GENERAL";
    GFXTextureLayout[GFXTextureLayout["COLOR_ATTACHMENT_OPTIMAL"] = 2] = "COLOR_ATTACHMENT_OPTIMAL";
    GFXTextureLayout[GFXTextureLayout["DEPTH_STENCIL_ATTACHMENT_OPTIMAL"] = 3] = "DEPTH_STENCIL_ATTACHMENT_OPTIMAL";
    GFXTextureLayout[GFXTextureLayout["DEPTH_STENCIL_READONLY_OPTIMAL"] = 4] = "DEPTH_STENCIL_READONLY_OPTIMAL";
    GFXTextureLayout[GFXTextureLayout["SHADER_READONLY_OPTIMAL"] = 5] = "SHADER_READONLY_OPTIMAL";
    GFXTextureLayout[GFXTextureLayout["TRANSFER_SRC_OPTIMAL"] = 6] = "TRANSFER_SRC_OPTIMAL";
    GFXTextureLayout[GFXTextureLayout["TRANSFER_DST_OPTIMAL"] = 7] = "TRANSFER_DST_OPTIMAL";
    GFXTextureLayout[GFXTextureLayout["PREINITIALIZED"] = 8] = "PREINITIALIZED";
    GFXTextureLayout[GFXTextureLayout["PRESENT_SRC"] = 9] = "PRESENT_SRC";
  })(GFXTextureLayout || (_exports.GFXTextureLayout = GFXTextureLayout = {}));

  var GFXPipelineBindPoint;
  _exports.GFXPipelineBindPoint = GFXPipelineBindPoint;

  (function (GFXPipelineBindPoint) {
    GFXPipelineBindPoint[GFXPipelineBindPoint["GRAPHICS"] = 0] = "GRAPHICS";
    GFXPipelineBindPoint[GFXPipelineBindPoint["COMPUTE"] = 1] = "COMPUTE";
    GFXPipelineBindPoint[GFXPipelineBindPoint["RAY_TRACING"] = 2] = "RAY_TRACING";
  })(GFXPipelineBindPoint || (_exports.GFXPipelineBindPoint = GFXPipelineBindPoint = {}));

  var GFXDynamicState;
  _exports.GFXDynamicState = GFXDynamicState;

  (function (GFXDynamicState) {
    GFXDynamicState[GFXDynamicState["VIEWPORT"] = 0] = "VIEWPORT";
    GFXDynamicState[GFXDynamicState["SCISSOR"] = 1] = "SCISSOR";
    GFXDynamicState[GFXDynamicState["LINE_WIDTH"] = 2] = "LINE_WIDTH";
    GFXDynamicState[GFXDynamicState["DEPTH_BIAS"] = 3] = "DEPTH_BIAS";
    GFXDynamicState[GFXDynamicState["BLEND_CONSTANTS"] = 4] = "BLEND_CONSTANTS";
    GFXDynamicState[GFXDynamicState["DEPTH_BOUNDS"] = 5] = "DEPTH_BOUNDS";
    GFXDynamicState[GFXDynamicState["STENCIL_WRITE_MASK"] = 6] = "STENCIL_WRITE_MASK";
    GFXDynamicState[GFXDynamicState["STENCIL_COMPARE_MASK"] = 7] = "STENCIL_COMPARE_MASK";
  })(GFXDynamicState || (_exports.GFXDynamicState = GFXDynamicState = {}));

  var GFXStencilFace;
  _exports.GFXStencilFace = GFXStencilFace;

  (function (GFXStencilFace) {
    GFXStencilFace[GFXStencilFace["FRONT"] = 0] = "FRONT";
    GFXStencilFace[GFXStencilFace["BACK"] = 1] = "BACK";
    GFXStencilFace[GFXStencilFace["ALL"] = 2] = "ALL";
  })(GFXStencilFace || (_exports.GFXStencilFace = GFXStencilFace = {}));

  var GFXQueueType;
  _exports.GFXQueueType = GFXQueueType;

  (function (GFXQueueType) {
    GFXQueueType[GFXQueueType["GRAPHICS"] = 0] = "GRAPHICS";
    GFXQueueType[GFXQueueType["COMPUTE"] = 1] = "COMPUTE";
    GFXQueueType[GFXQueueType["TRANSFER"] = 2] = "TRANSFER";
  })(GFXQueueType || (_exports.GFXQueueType = GFXQueueType = {}));

  var GFXClearFlag;
  _exports.GFXClearFlag = GFXClearFlag;

  (function (GFXClearFlag) {
    GFXClearFlag[GFXClearFlag["NONE"] = 0] = "NONE";
    GFXClearFlag[GFXClearFlag["COLOR"] = 1] = "COLOR";
    GFXClearFlag[GFXClearFlag["DEPTH"] = 2] = "DEPTH";
    GFXClearFlag[GFXClearFlag["STENCIL"] = 4] = "STENCIL";
    GFXClearFlag[GFXClearFlag["DEPTH_STENCIL"] = 6] = "DEPTH_STENCIL";
    GFXClearFlag[GFXClearFlag["ALL"] = 7] = "ALL";
  })(GFXClearFlag || (_exports.GFXClearFlag = GFXClearFlag = {}));

  var GFXTextureSubres = function GFXTextureSubres() {
    _classCallCheck(this, GFXTextureSubres);

    this.baseMipLevel = 0;
    this.levelCount = 1;
    this.baseArrayLayer = 0;
    this.layerCount = 1;
  };

  _exports.GFXTextureSubres = GFXTextureSubres;

  var GFXTextureCopy = function GFXTextureCopy() {
    _classCallCheck(this, GFXTextureCopy);

    this.srcSubres = new GFXTextureSubres();
    this.srcOffset = {
      x: 0,
      y: 0,
      z: 0
    };
    this.dstSubres = new GFXTextureSubres();
    this.dstOffset = {
      x: 0,
      y: 0,
      z: 0
    };
    this.extent = {
      width: 0,
      height: 0,
      depth: 0
    };
  };

  _exports.GFXTextureCopy = GFXTextureCopy;

  var GFXBufferTextureCopy = function GFXBufferTextureCopy() {
    _classCallCheck(this, GFXBufferTextureCopy);

    this.buffOffset = 0;
    this.buffStride = 0;
    this.buffTexHeight = 0;
    this.texOffset = {
      x: 0,
      y: 0,
      z: 0
    };
    this.texExtent = {
      width: 0,
      height: 0,
      depth: 0
    };
    this.texSubres = new GFXTextureSubres();
  };

  _exports.GFXBufferTextureCopy = GFXBufferTextureCopy;
  var GFXFormatType;
  _exports.GFXFormatType = GFXFormatType;

  (function (GFXFormatType) {
    GFXFormatType[GFXFormatType["NONE"] = 0] = "NONE";
    GFXFormatType[GFXFormatType["UNORM"] = 1] = "UNORM";
    GFXFormatType[GFXFormatType["SNORM"] = 2] = "SNORM";
    GFXFormatType[GFXFormatType["UINT"] = 3] = "UINT";
    GFXFormatType[GFXFormatType["INT"] = 4] = "INT";
    GFXFormatType[GFXFormatType["UFLOAT"] = 5] = "UFLOAT";
    GFXFormatType[GFXFormatType["FLOAT"] = 6] = "FLOAT";
  })(GFXFormatType || (_exports.GFXFormatType = GFXFormatType = {}));

  // tslint:disable: max-line-length
  var GFXFormatInfos = [{
    name: 'UNKNOWN',
    size: 0,
    count: 0,
    type: GFXFormatType.NONE,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'A8',
    size: 1,
    count: 1,
    type: GFXFormatType.UNORM,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'L8',
    size: 1,
    count: 1,
    type: GFXFormatType.UNORM,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'LA8',
    size: 1,
    count: 2,
    type: GFXFormatType.UNORM,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'R8',
    size: 1,
    count: 1,
    type: GFXFormatType.UNORM,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'R8SN',
    size: 1,
    count: 1,
    type: GFXFormatType.SNORM,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'R8UI',
    size: 1,
    count: 1,
    type: GFXFormatType.UINT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'R8I',
    size: 1,
    count: 1,
    type: GFXFormatType.INT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'R16F',
    size: 2,
    count: 1,
    type: GFXFormatType.FLOAT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'R16UI',
    size: 2,
    count: 1,
    type: GFXFormatType.UINT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'R16I',
    size: 2,
    count: 1,
    type: GFXFormatType.INT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'R32F',
    size: 4,
    count: 1,
    type: GFXFormatType.FLOAT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'R32UI',
    size: 4,
    count: 1,
    type: GFXFormatType.UINT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'R32I',
    size: 4,
    count: 1,
    type: GFXFormatType.INT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RG8',
    size: 2,
    count: 2,
    type: GFXFormatType.UNORM,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RG8SN',
    size: 2,
    count: 2,
    type: GFXFormatType.SNORM,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RG8UI',
    size: 2,
    count: 2,
    type: GFXFormatType.UINT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RG8I',
    size: 2,
    count: 2,
    type: GFXFormatType.INT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RG16F',
    size: 4,
    count: 2,
    type: GFXFormatType.FLOAT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RG16UI',
    size: 4,
    count: 2,
    type: GFXFormatType.UINT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RG16I',
    size: 4,
    count: 2,
    type: GFXFormatType.INT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RG32F',
    size: 8,
    count: 2,
    type: GFXFormatType.FLOAT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RG32UI',
    size: 8,
    count: 2,
    type: GFXFormatType.UINT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RG32I',
    size: 8,
    count: 2,
    type: GFXFormatType.INT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGB8',
    size: 3,
    count: 3,
    type: GFXFormatType.UNORM,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'SRGB8',
    size: 3,
    count: 3,
    type: GFXFormatType.UNORM,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGB8SN',
    size: 3,
    count: 3,
    type: GFXFormatType.SNORM,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGB8UI',
    size: 3,
    count: 3,
    type: GFXFormatType.UINT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGB8I',
    size: 3,
    count: 3,
    type: GFXFormatType.INT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGB16F',
    size: 6,
    count: 3,
    type: GFXFormatType.FLOAT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGB16UI',
    size: 6,
    count: 3,
    type: GFXFormatType.UINT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGB16I',
    size: 6,
    count: 3,
    type: GFXFormatType.INT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGB32F',
    size: 12,
    count: 3,
    type: GFXFormatType.FLOAT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGB32UI',
    size: 12,
    count: 3,
    type: GFXFormatType.UINT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGB32I',
    size: 12,
    count: 3,
    type: GFXFormatType.INT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGBA8',
    size: 4,
    count: 4,
    type: GFXFormatType.UNORM,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'SRGB8_A8',
    size: 4,
    count: 4,
    type: GFXFormatType.UNORM,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGBA8SN',
    size: 4,
    count: 4,
    type: GFXFormatType.SNORM,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGBA8UI',
    size: 4,
    count: 4,
    type: GFXFormatType.UINT,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGBA8I',
    size: 4,
    count: 4,
    type: GFXFormatType.INT,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGBA16F',
    size: 8,
    count: 4,
    type: GFXFormatType.FLOAT,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGBA16UI',
    size: 8,
    count: 4,
    type: GFXFormatType.UINT,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGBA16I',
    size: 8,
    count: 4,
    type: GFXFormatType.INT,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGBA32F',
    size: 16,
    count: 4,
    type: GFXFormatType.FLOAT,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGBA32UI',
    size: 16,
    count: 4,
    type: GFXFormatType.UINT,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGBA32I',
    size: 16,
    count: 4,
    type: GFXFormatType.INT,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'R5G6B5',
    size: 2,
    count: 3,
    type: GFXFormatType.UNORM,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'R11G11B10F',
    size: 4,
    count: 3,
    type: GFXFormatType.FLOAT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGB5A1',
    size: 2,
    count: 4,
    type: GFXFormatType.UNORM,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGBA4',
    size: 2,
    count: 4,
    type: GFXFormatType.UNORM,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGB10A2',
    size: 2,
    count: 4,
    type: GFXFormatType.UNORM,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGB10A2UI',
    size: 2,
    count: 4,
    type: GFXFormatType.UINT,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'RGB9E5',
    size: 2,
    count: 4,
    type: GFXFormatType.FLOAT,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'D16',
    size: 2,
    count: 1,
    type: GFXFormatType.UINT,
    hasAlpha: false,
    hasDepth: true,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'D16S8',
    size: 3,
    count: 2,
    type: GFXFormatType.UINT,
    hasAlpha: false,
    hasDepth: true,
    hasStencil: true,
    isCompressed: false
  }, {
    name: 'D24',
    size: 3,
    count: 1,
    type: GFXFormatType.UINT,
    hasAlpha: false,
    hasDepth: true,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'D24S8',
    size: 4,
    count: 2,
    type: GFXFormatType.UINT,
    hasAlpha: false,
    hasDepth: true,
    hasStencil: true,
    isCompressed: false
  }, {
    name: 'D32F',
    size: 4,
    count: 1,
    type: GFXFormatType.FLOAT,
    hasAlpha: false,
    hasDepth: true,
    hasStencil: false,
    isCompressed: false
  }, {
    name: 'D32FS8',
    size: 5,
    count: 2,
    type: GFXFormatType.FLOAT,
    hasAlpha: false,
    hasDepth: true,
    hasStencil: true,
    isCompressed: false
  }, {
    name: 'BC1',
    size: 1,
    count: 3,
    type: GFXFormatType.UNORM,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'BC1_ALPHA',
    size: 1,
    count: 4,
    type: GFXFormatType.UNORM,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'BC1_SRGB',
    size: 1,
    count: 3,
    type: GFXFormatType.UNORM,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'BC1_SRGB_ALPHA',
    size: 1,
    count: 4,
    type: GFXFormatType.UNORM,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'BC2',
    size: 1,
    count: 4,
    type: GFXFormatType.UNORM,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'BC2_SRGB',
    size: 1,
    count: 4,
    type: GFXFormatType.UNORM,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'BC3',
    size: 1,
    count: 4,
    type: GFXFormatType.UNORM,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'BC3_SRGB',
    size: 1,
    count: 4,
    type: GFXFormatType.UNORM,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'BC4',
    size: 1,
    count: 1,
    type: GFXFormatType.UNORM,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'BC4_SNORM',
    size: 1,
    count: 1,
    type: GFXFormatType.SNORM,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'BC5',
    size: 1,
    count: 2,
    type: GFXFormatType.UNORM,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'BC5_SNORM',
    size: 1,
    count: 2,
    type: GFXFormatType.SNORM,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'BC6H_UF16',
    size: 1,
    count: 3,
    type: GFXFormatType.UFLOAT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'BC6H_SF16',
    size: 1,
    count: 3,
    type: GFXFormatType.FLOAT,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'BC7',
    size: 1,
    count: 4,
    type: GFXFormatType.UNORM,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'BC7_SRGB',
    size: 1,
    count: 4,
    type: GFXFormatType.UNORM,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'ETC_RGB8',
    size: 1,
    count: 3,
    type: GFXFormatType.UNORM,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'ETC2_RGB8',
    size: 1,
    count: 3,
    type: GFXFormatType.UNORM,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'ETC2_SRGB8',
    size: 1,
    count: 3,
    type: GFXFormatType.UNORM,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'ETC2_RGB8_A1',
    size: 1,
    count: 4,
    type: GFXFormatType.UNORM,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'ETC2_SRGB8_A1',
    size: 1,
    count: 4,
    type: GFXFormatType.UNORM,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'ETC2_RGBA8',
    size: 2,
    count: 4,
    type: GFXFormatType.UNORM,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'ETC2_SRGB8_A8',
    size: 2,
    count: 4,
    type: GFXFormatType.UNORM,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'EAC_R11',
    size: 1,
    count: 1,
    type: GFXFormatType.UNORM,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'EAC_R11SN',
    size: 1,
    count: 1,
    type: GFXFormatType.SNORM,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'EAC_RG11',
    size: 2,
    count: 2,
    type: GFXFormatType.UNORM,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'EAC_RG11SN',
    size: 2,
    count: 2,
    type: GFXFormatType.SNORM,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'PVRTC_RGB2',
    size: 2,
    count: 3,
    type: GFXFormatType.UNORM,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'PVRTC_RGBA2',
    size: 2,
    count: 4,
    type: GFXFormatType.UNORM,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'PVRTC_RGB4',
    size: 2,
    count: 3,
    type: GFXFormatType.UNORM,
    hasAlpha: false,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'PVRTC_RGBA4',
    size: 2,
    count: 4,
    type: GFXFormatType.UNORM,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'PVRTC2_2BPP',
    size: 2,
    count: 4,
    type: GFXFormatType.UNORM,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }, {
    name: 'PVRTC2_4BPP',
    size: 2,
    count: 4,
    type: GFXFormatType.UNORM,
    hasAlpha: true,
    hasDepth: false,
    hasStencil: false,
    isCompressed: true
  }]; // tslint:enable: max-line-length

  /**
   * @en Get memory size of the specified fomat.
   * @zh 获取指定格式对应的内存大小。
   * @param format The target format.
   * @param width The target width.
   * @param height The target height.
   * @param depth The target depth.
   */

  _exports.GFXFormatInfos = GFXFormatInfos;

  function GFXFormatSize(format, width, height, depth) {
    if (!GFXFormatInfos[format].isCompressed) {
      return width * height * depth * GFXFormatInfos[format].size;
    } else {
      switch (format) {
        case GFXFormat.BC1:
        case GFXFormat.BC1_ALPHA:
        case GFXFormat.BC1_SRGB:
        case GFXFormat.BC1_SRGB_ALPHA:
          return Math.ceil(width / 4) * Math.ceil(height / 4) * 8 * depth;

        case GFXFormat.BC2:
        case GFXFormat.BC2_SRGB:
        case GFXFormat.BC3:
        case GFXFormat.BC3_SRGB:
        case GFXFormat.BC4:
        case GFXFormat.BC4_SNORM:
        case GFXFormat.BC6H_SF16:
        case GFXFormat.BC6H_UF16:
        case GFXFormat.BC7:
        case GFXFormat.BC7_SRGB:
          return Math.ceil(width / 4) * Math.ceil(height / 4) * 16 * depth;

        case GFXFormat.BC5:
        case GFXFormat.BC5_SNORM:
          return Math.ceil(width / 4) * Math.ceil(height / 4) * 32 * depth;

        case GFXFormat.ETC_RGB8:
        case GFXFormat.ETC2_RGB8:
        case GFXFormat.ETC2_SRGB8:
        case GFXFormat.ETC2_RGB8_A1:
        case GFXFormat.ETC2_SRGB8_A1:
        case GFXFormat.EAC_R11:
        case GFXFormat.EAC_R11SN:
          return Math.ceil(width / 4) * Math.ceil(height / 4) * 8 * depth;

        case GFXFormat.ETC2_RGBA8:
        case GFXFormat.EAC_RG11:
        case GFXFormat.EAC_RG11SN:
          return Math.ceil(width / 4) * Math.ceil(height / 4) * 16 * depth;

        case GFXFormat.PVRTC_RGB2:
        case GFXFormat.PVRTC_RGBA2:
        case GFXFormat.PVRTC2_2BPP:
          return Math.ceil(Math.max(width, 16) * Math.max(height, 8) / 4) * depth;

        case GFXFormat.PVRTC_RGB4:
        case GFXFormat.PVRTC_RGBA4:
        case GFXFormat.PVRTC2_4BPP:
          return Math.ceil(Math.max(width, 16) * Math.max(height, 8) / 2) * depth;

        default:
          {
            return 0;
          }
      }
    }
  }
  /**
   * @en Get memory size of the specified surface.
   * @zh GFX 格式表面内存大小。
   * @param format The target format.
   * @param width The target width.
   * @param height The target height.
   * @param depth The target depth.
   * @param mips The target mip levels.
   */


  function GFXFormatSurfaceSize(format, width, height, depth, mips) {
    var size = 0;

    for (var i = 0; i < mips; ++i) {
      size += GFXFormatSize(format, width, height, depth);
      width = Math.max(width >> 1, 1);
      height = Math.max(height >> 1, 1);
    }

    return size;
  }

  var _type2size = [0, // UNKNOWN
  4, // BOOL
  8, // BOOL2
  12, // BOOL3
  16, // BOOL4
  4, // INT
  8, // INT2
  12, // INT3
  16, // INT4
  4, // UINT
  8, // UINT2
  12, // UINT3
  16, // UINT4
  4, // FLOAT
  8, // FLOAT2
  12, // FLOAT3
  16, // FLOAT4
  16, // MAT2
  24, // MAT2X3
  32, // MAT2X4
  24, // MAT3X2
  36, // MAT3
  48, // MAT3X4
  32, // MAT4X2
  48, // MAT4X3
  64, // MAT4
  4, // SAMPLER1D
  4, // SAMPLER1D_ARRAY
  4, // SAMPLER2D
  4, // SAMPLER2D_ARRAY
  4, // SAMPLER3D
  4 // SAMPLER_CUBE
  ];
  /**
   * @en Get the memory size of the specified type.
   * @zh 得到 GFX 数据类型的大小。
   * @param type The target type.
   */

  function GFXGetTypeSize(type) {
    return _type2size[type] || 0;
  }

  function getTypedArrayConstructor(info) {
    var stride = info.size / info.count;

    switch (info.type) {
      case GFXFormatType.UNORM:
      case GFXFormatType.UINT:
        {
          switch (stride) {
            case 1:
              return Uint8Array;

            case 2:
              return Uint16Array;

            case 4:
              return Uint32Array;
          }

          break;
        }

      case GFXFormatType.SNORM:
      case GFXFormatType.INT:
        {
          switch (stride) {
            case 1:
              return Int8Array;

            case 2:
              return Int16Array;

            case 4:
              return Int32Array;
          }

          break;
        }

      case GFXFormatType.FLOAT:
        {
          return Float32Array;
        }
    }

    return Float32Array;
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,