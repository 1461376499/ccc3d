(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "../../core/data/class-decorator.js", "../../core/math/index.js", "../enum.js", "../particle.js", "./curve-range.js", "../particle-general-function.js"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("../../core/data/class-decorator.js"), require("../../core/math/index.js"), require("../enum.js"), require("../particle.js"), require("./curve-range.js"), require("../particle-general-function.js"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.classDecorator, global.index, global._enum, global.particle, global.curveRange, global.particleGeneralFunction);
    global.limitVelocityOvertime = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _classDecorator, _index, _enum, _particle, _curveRange, _particleGeneralFunction) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _curveRange = _interopRequireDefault(_curveRange);

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _temp;

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  // tslint:disable: max-line-length
  var LIMIT_VELOCITY_RAND_OFFSET = _enum.ModuleRandSeed.LIMIT;

  var _temp_v3 = new _index.Vec3();

  var _temp_v3_1 = new _index.Vec3();

  var LimitVelocityOvertimeModule = (_dec = (0, _classDecorator.ccclass)('cc.LimitVelocityOvertimeModule'), _dec2 = (0, _classDecorator.property)({
    displayOrder: 0
  }), _dec3 = (0, _classDecorator.property)({
    type: _curveRange.default,
    range: [-1, 1],
    displayOrder: 4,
    tooltip: 'X 轴方向上的速度下限'
  }), _dec4 = (0, _classDecorator.property)({
    type: _curveRange.default,
    range: [-1, 1],
    displayOrder: 5,
    tooltip: 'Y 轴方向上的速度下限'
  }), _dec5 = (0, _classDecorator.property)({
    type: _curveRange.default,
    range: [-1, 1],
    displayOrder: 6,
    tooltip: 'Z 轴方向上的速度下限'
  }), _dec6 = (0, _classDecorator.property)({
    type: _curveRange.default,
    range: [-1, 1],
    displayOrder: 3,
    tooltip: '速度下限'
  }), _dec7 = (0, _classDecorator.property)({
    displayOrder: 7,
    tooltip: '当前速度与速度下限的插值'
  }), _dec8 = (0, _classDecorator.property)({
    displayOrder: 2,
    tooltip: '是否三个轴分开限制'
  }), _dec9 = (0, _classDecorator.property)({
    type: _enum.Space,
    displayOrder: 1,
    tooltip: '计算速度下限时采用的坐标系'
  }), _dec(_class = (_class2 = (_temp = /*#__PURE__*/function (_ParticleModuleBase) {
    _inherits(LimitVelocityOvertimeModule, _ParticleModuleBase);

    _createClass(LimitVelocityOvertimeModule, [{
      key: "enable",

      /**
       * @zh 是否启用。
       */
      get: function get() {
        return this._enable;
      },
      set: function set(val) {
        if (this._enable === val) return;
        this._enable = val;
        if (!this.target) return;
        this.target.enableModule(this.name, val, this);
      }
      /**
       * @zh X 轴方向上的速度下限。
       */

    }]);

    function LimitVelocityOvertimeModule() {
      var _this;

      _classCallCheck(this, LimitVelocityOvertimeModule);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(LimitVelocityOvertimeModule).call(this));

      _initializerDefineProperty(_this, "_enable", _descriptor, _assertThisInitialized(_this));

      _initializerDefineProperty(_this, "limitX", _descriptor2, _assertThisInitialized(_this));

      _initializerDefineProperty(_this, "limitY", _descriptor3, _assertThisInitialized(_this));

      _initializerDefineProperty(_this, "limitZ", _descriptor4, _assertThisInitialized(_this));

      _initializerDefineProperty(_this, "limit", _descriptor5, _assertThisInitialized(_this));

      _initializerDefineProperty(_this, "dampen", _descriptor6, _assertThisInitialized(_this));

      _initializerDefineProperty(_this, "separateAxes", _descriptor7, _assertThisInitialized(_this));

      _initializerDefineProperty(_this, "space", _descriptor8, _assertThisInitialized(_this));

      _this.drag = null;
      _this.multiplyDragByParticleSize = false;
      _this.multiplyDragByParticleVelocity = false;
      _this.name = _particle.PARTICLE_MODULE_NAME.LIMIT;
      _this.rotation = void 0;
      _this.needTransform = void 0;
      _this.rotation = new _index.Quat();
      _this.needTransform = false;
      _this.needUpdate = true;
      return _this;
    }

    _createClass(LimitVelocityOvertimeModule, [{
      key: "update",
      value: function update(space, worldTransform) {
        this.needTransform = (0, _particleGeneralFunction.calculateTransform)(space, this.space, worldTransform, this.rotation);
      }
    }, {
      key: "animate",
      value: function animate(p, dt) {
        var normalizedTime = 1 - p.remainingLifetime / p.startLifetime;
        var dampedVel = _temp_v3;

        if (this.separateAxes) {
          _index.Vec3.set(_temp_v3_1, this.limitX.evaluate(normalizedTime, (0, _index.pseudoRandom)(p.randomSeed + LIMIT_VELOCITY_RAND_OFFSET)), this.limitY.evaluate(normalizedTime, (0, _index.pseudoRandom)(p.randomSeed + LIMIT_VELOCITY_RAND_OFFSET)), this.limitZ.evaluate(normalizedTime, (0, _index.pseudoRandom)(p.randomSeed + LIMIT_VELOCITY_RAND_OFFSET)));

          if (this.needTransform) {
            _index.Vec3.transformQuat(_temp_v3_1, _temp_v3_1, this.rotation);
          }

          _index.Vec3.set(dampedVel, dampenBeyondLimit(p.ultimateVelocity.x, _temp_v3_1.x, this.dampen), dampenBeyondLimit(p.ultimateVelocity.y, _temp_v3_1.y, this.dampen), dampenBeyondLimit(p.ultimateVelocity.z, _temp_v3_1.z, this.dampen));
        } else {
          _index.Vec3.normalize(dampedVel, p.ultimateVelocity);

          _index.Vec3.multiplyScalar(dampedVel, dampedVel, dampenBeyondLimit(p.ultimateVelocity.length(), this.limit.evaluate(normalizedTime, (0, _index.pseudoRandom)(p.randomSeed + LIMIT_VELOCITY_RAND_OFFSET)), this.dampen));
        }

        _index.Vec3.copy(p.ultimateVelocity, dampedVel);
      }
    }]);

    return LimitVelocityOvertimeModule;
  }(_particle.ParticleModuleBase), _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "_enable", [_classDecorator.property], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return false;
    }
  }), _applyDecoratedDescriptor(_class2.prototype, "enable", [_dec2], Object.getOwnPropertyDescriptor(_class2.prototype, "enable"), _class2.prototype), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "limitX", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return new _curveRange.default();
    }
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "limitY", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return new _curveRange.default();
    }
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "limitZ", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return new _curveRange.default();
    }
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "limit", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return new _curveRange.default();
    }
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "dampen", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return 3;
    }
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "separateAxes", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return false;
    }
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "space", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function initializer() {
      return _enum.Space.Local;
    }
  })), _class2)) || _class);
  _exports.default = LimitVelocityOvertimeModule;

  function dampenBeyondLimit(vel, limit, dampen) {
    var sgn = Math.sign(vel);
    var abs = Math.abs(vel);

    if (abs > limit) {
      abs = (0, _index.lerp)(abs, limit, dampen);
    }

    return abs * sgn;
  } // CCClass.fastDefine('cc.LimitVelocityOvertimeModule', LimitVelocityOvertimeModule, {
  //     enable: false,
  //     limitX: null,
  //     limitY: null,
  //     limitZ: null,
  //     limit: null,
  //     dampen: null,
  //     separateAxes: false,
  //     space: Space.Local,
  //     // TODO:functions related to drag are temporarily not supported
  //     drag: null,
  //     multiplyDragByParticleSize: false,
  //     multiplyDragByParticleVelocity: false
  // });

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,